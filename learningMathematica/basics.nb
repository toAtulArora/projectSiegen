(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    382530,       8749]
NotebookOptionsPosition[    367743,       8251]
NotebookOutlinePosition[    368083,       8266]
CellTagsIndexPosition[    368040,       8263]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", " ", "3", ",", " ", "4"}], "}"}]], "Input",
 CellChangeTimes->{{3.643027013664589*^9, 3.643027017507147*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.643027021991794*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", " ", "a", ",", " ", "cat"}], "}"}]], "Input",
 CellChangeTimes->{{3.643027037391871*^9, 3.643027064510624*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "a", ",", "cat"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.643027084206892*^9, 3.643027106847945*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "a", ",", "cat"}], "}"}]], "Output",
 CellChangeTimes->{3.643027107869413*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylist", "+", "1"}]], "Input",
 CellChangeTimes->{{3.643027129862331*^9, 3.643027134208797*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   RowBox[{"1", "+", "a"}], ",", 
   RowBox[{"1", "+", "cat"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643027134837986*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"3", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.643027158177635*^9, 3.6430271801839113`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6430271644314337`*^9, 3.6430271831572742`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"mylist", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643027189779258*^9, 3.6430271983111773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cat", "+", "1"}]], "Input",
 CellChangeTimes->{{3.643027233188633*^9, 3.6430272338782587`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "cat"}]], "Output",
 CellChangeTimes->{3.6430272346581697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"j", ",", " ", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "8", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643027259929599*^9, 3.64302726669438*^9}, {
  3.643027357680532*^9, 3.643027401318022*^9}, {3.643027467791099*^9, 
  3.643027508541615*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.2`", ",", "1.4`", ",", "1.6`", ",", "1.8`", ",", "2.`", ",", 
   "2.2`", ",", "2.4000000000000004`", ",", "2.6`", ",", "2.8`", ",", "3.`", 
   ",", "3.2`", ",", "3.4000000000000004`", ",", "3.6`", ",", 
   "3.8000000000000003`", ",", "4.`", ",", "4.2`", ",", "4.4`", ",", "4.6`", 
   ",", "4.800000000000001`", ",", "5.`", ",", "5.2`", ",", "5.4`", ",", 
   "5.6000000000000005`", ",", "5.800000000000001`", ",", "6.`", ",", "6.2`", 
   ",", "6.4`", ",", "6.6000000000000005`", ",", "6.800000000000001`", ",", 
   "7.`", ",", "7.2`", ",", "7.4`", ",", "7.6000000000000005`", ",", 
   "7.800000000000001`", ",", "8.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6430273761065903`*^9, 3.643027402093917*^9}, {
  3.64302747244415*^9, 3.643027509568668*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dicerolls", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", "10000000"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.643027533290057*^9, 3.6430275688681707`*^9}, {
  3.643027673905883*^9, 3.64302768555443*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.0", "*", 
  RowBox[{"Mean", "[", "dicerolls", "]"}]}]], "Input",
 CellChangeTimes->{{3.6430276214355907`*^9, 3.6430276262290287`*^9}, {
  3.643027666155613*^9, 3.6430276669068003`*^9}}],

Cell[BoxData["3.4999036`"], "Output",
 CellChangeTimes->{{3.6430276286752462`*^9, 3.6430277046995573`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"squares", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643027738544056*^9, 3.6430277562315073`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64"}], "}"}]], "Output",
 CellChangeTimes->{3.643027757771962*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upto8", "=", 
  RowBox[{"Range", "[", "8", "]"}]}]], "Input",
 CellChangeTimes->{{3.6430277784206543`*^9, 3.643027783629043*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
   "}"}]], "Output",
 CellChangeTimes->{3.643027784090438*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643027873760343*^9, 3.643027885209909*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "b", "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643027886633834*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], " ", "&"}], ",", " ", "upto8"}], "]"}]], "Input",\

 CellChangeTimes->{{3.64302792043924*^9, 3.643027961168445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", "#", "]"}], " ", "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
     "64"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643028020364492*^9, 3.6430280284274273`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
   "}"}]], "Output",
 CellChangeTimes->{3.64302802914249*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "squares", "]"}]], "Input",
 CellChangeTimes->{{3.643028035039571*^9, 3.6430280410433893`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {6., 
      36.}, {7., 49.}, {8., 64.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 8.}, {0, 64.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.643028042296774*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"squares", ",", "upto8"}], "}"}], ",", " ", 
   RowBox[{"Joined", " ", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6430280541642447`*^9, 3.643028129297987*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {6., 36.}, {
      7., 49.}, {8., 64.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 6.}, {7.,
       7.}, {8., 8.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 8.}, {0, 64.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6430280870607843`*^9, 3.643028129689282*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "squares", "]"}]], "Input",
 CellChangeTimes->{{3.643028133089871*^9, 3.643028135895081*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.643028136468861*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"f", ",", "a", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6430281378740883`*^9, 3.643028164759471*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", 
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "a", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "a", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "a", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", "a", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.643028166728231*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "*", "2"}], " ", "&"}], ",", "1", ",", "5"}], "]"}]], "Input",\

 CellChangeTimes->{{3.6430282021690817`*^9, 3.64302822998252*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "4", ",", "8", ",", "16", ",", "32"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6430282310562143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestWhileList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "*", "2"}], " ", "&"}], ",", "1", ",", 
   RowBox[{
    RowBox[{"#", "\[LessEqual]", "123"}], " ", "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643028259779257*^9, 3.643028308736362*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64", ",", 
   "128"}], "}"}]], "Output",
 CellChangeTimes->{{3.6430282910402517`*^9, 3.643028309817861*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "+", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6430283556733637`*^9, 3.643028361851256*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "a"}], ",", 
   RowBox[{"2", "+", "b"}], ",", 
   RowBox[{"3", "+", "c"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643028362170442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6430283895186863`*^9, 3.643028402920425*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.643028403897938*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643028424679018*^9, 3.6430284320796432`*^9}}],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.6430284327235117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsets", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.64302844451495*^9, 3.643028452974485*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643028454060541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643028468170223*^9, 3.643028476615354*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.643028477383689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6430284794416637`*^9, 3.643028500250457*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "a", ",", "2", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.643028501302761*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.643028511454056*^9, 3.6430285163910933`*^9}}],

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.643028527734365*^9, 3.643028533774233*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6430285341729107`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.64302855017235*^9, 3.643028550674588*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.643028551216695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Riffle", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", "26"}], "]"}], ",", 
        RowBox[{"Drop", "[", 
         RowBox[{"#", ",", "26"}], "]"}]}], "]"}], " ", "&"}], ",", 
     RowBox[{"Range", "[", "52", "]"}], ",", " ", "52"}], "]"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.643028585384405*^9, 3.6430287475267982`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt2tlTFfYZxnG1qRpR65bquEWNSypD1EQF6/JWZioWRQ3GXan7pMYluLUl
aNVEjIqMuBtE65a4J7HGFkFxEBEFBBFkU/bDYTkUxYVoR639A74X3PXiuTgz
XHH1e7/Pgfl0n7vMf8EvGjRoMOjNZ+Cbz/9+fjQ6Zlike74N/r7yzK+zo63k
ddiJCQ8KzbPOf8WF43fNa0HxLb/EYjv0cWWcHXBayEifaUvOlNmM0l4hn8U4
bVLTVouqmt+1ls3jJ6/8lcuGrR/f5sc+6db6UtgXLyfGW45v5rzRQ+9Y+tzp
v4w4VmBurtql1RsrbM/6vrvbXy2xuoCnzw8nOW3mwuVJJ3bes6pRc0P9k132
aE1UQHFWnmWc6bloesdEO5JY1LH34VSrqChNOeKVbdWxPqu7tqy04J67PBo6
C231EB8btsRpXTqd6dt7Tp55TB1Xdi3LZcUresR4uYpsTOqYzmm/SbKDd153
6lmdaj0/P9LOvXuaLT7gP8+nvNyilnqszj95354GB/r1+q7M1q7c92DkN4U2
7XFJP4/KKjuXNn7d5yml1i65ctmMsyl2ufGz1oGudPthy7VeE8PjzPvvt39w
dSmz2bGhYa18sy1oyOykQ/Mc5v/x9VnbYkrsURvfFp3aVlrvSz3j/b8ps/V7
V81YOyzNjkW9Fzj/ca6V1i4+Om5bjAVsjuqyc0Sx/fwyon2fKxn2Ks//ydng
Epsz5khg9KkyGxzQeuJfdzhtpVeTzpM3Om1KeNDPeT7p1qhuZET33Crz2JLc
7HFyih2J7Of/Vf9r5rbqszNZTdLtn8/HN9mQVmgflHz4YlZpuW0ZPnXRnEul
ljTU1sQkOq3Hpe/bDJ2bafM/mv2nqFCXPTwVWbc7MtvWxjee2/9egj2O3TS8
YGSa3V2wMGLC5VxrXv6p1+iqCrvy9FxY/5wiK+p0ctb57U47HdL8sUd0jgXn
Ds9cc//N7/Es2NbscKF5z/LzOelxy7p+6bYs+USqJQd4hwflpdv+J+NmOmZX
2Lt26c8rpuTb2YHrWvrWlFm130+xMwcW2JqvuxWF+bpscju37EVVJRYf9aDH
poJkO7tv5/5PLt6xrgMqAvY4EmzfYNeNZ32dlu89c8TecznWKGXIrba5DnuZ
cfXglbPFduXinqIp8ZU2auqHx+92KLO9veY03vK3VJvcd+tx9+gsCx9csz/E
+7LltindkXmoxKLeckTvv5dp8f7XurQcUGrv/X56N88ohzmC8sZu/Eu5bQst
//F345w2vaMjJHnDHXtWFFtw+1iVVbd+8fBL3xs2eH3a+24t4mz4oYZPF2ak
21txtVsv3i4y/9zlG297l9sXzzfa6QsOO9Rhc4Os606raFE9LaV/huW/GzCq
m5/LnmSt3/6HeZnmfr98WuMd121XxMEl7v9Is5gi56evRj4w91ZbXgQmVtjr
hJs1f0wqtrGvmgW/f8Fpv61dHD3onWxLmukR71nksv/Uecb+63S+eVWNW75h
wE2LHNg+buX8VFvlV9zi1u5MSxg7ZtKXORUWt+nosK8aFdoCV1jqUk+nPTg/
JH7QwAd2uMusHQ9Puez1lIR+C94usRXfpWWeb51skX0HdPdal2ahWS335QxJ
sprktwsaeJXbzAT3f3dpm2dbZ7e9uWlCmX07Naag5mCRhU4v+WnXqipb+MxC
PtnrMPfOWZPah9y2phG1ObUbMmxEUOD2K3WXbdKBlk07NHRYkNsHs5vX3LPN
Nz/yWeooNceINqnnb5Ta7r3HR4UHVNi3hTd93Nu/6cbR8e9cvpxmlcnDewYv
q7Ij+/tktUu8ajfmB74Or7hq1DfqGPWKukT9oc5QT6gb1AfqAN073TXdL90p
3SPdHd0X3RHdC90FvX965/Se6d3S+6R3SLtJ+0g7SHtHu0b7RTtFe0S7Q/tC
O0J7QbtA/afOU8+p29Rn6jD1lrpK/aROUg+pe/XtG3WMekVdov5QZ6gn1A3q
A3WA7p3umu6X7pTuke6O7ovuiO6F7oLeP71zes/4fQDeJ71D2k3aR9pB2jva
Ndov2inaI9od2hfaEdoL2gXqP3Week7dpj5Th6m31FXqJ3WSekjdq2/fqGPU
K+oS9Yc6Qz2hblAfqAN073TXdL90p3SPdHd0X3RHdC90F/T+6Z3j36Hwbul9
0juk3aR9pB2kvaNdo/2inaI9ot2hfaEdob2gXaD+U+ep59Rt6jN1mHpLXaV+
Uieph9S9+vaNOka9oi5Rf6gz1BPqBvWBOkD3TndN90t3SvdId0f3RXdE90J3
Qe+f3jm9Z3q39D7pHdJu0j7SDtLe0a7RftFO0R7R7tC+0I7QXtAuUP+p89Rz
6jb1mTpMvcWuQj+pk9RD6l59+0Ydo15Rl6g/1BnqCXWD+kAdoHunu6b7pTul
e6S7o/uiO6J7obug90/vnN4zvVt6n/QOaTdpH2kHae9o12i/aKdoj2h3aF9o
R2gvaBeo/9R56jl1m/pMHabeUlepn9RJ6iF1r759o45Rr6hL1B/qDPWEukF9
oA7QvdNd0/3SneL3Urg7ui+6I7oXugt6//TO6T3Tu6X3Se+QdpP2kXaQ9o52
jfaLdor2iHaH9oV2hPaCdoH6T52nnlO3qc/UYeotdZX6SZ2kHlL36ts36hj1
irpE/aHOUE+oG9QH6gDdO9013S/dKf6/F+6O7ovuiO6F7oLeP71zes/0bul9
0juk3aR9pB2kvaNdo/2inaI9ot2hfaEdob2gXaD+U+ep59Rt6jN1mHpLXaV+
Uieph9S9+vZN/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+
Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+
Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+
Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+
Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N
/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/k3+Tf5N/u3/07/9F4Vz
SVg=
   "], {{0, 0}, {52, 53}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.6430286697210827`*^9, {3.6430287011613197`*^9, 3.643028748326219*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.643028814246369*^9, 3.643028844132526*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.643028828847396*^9, 3.643028844478558*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.643028847090764*^9, 3.6430288564741173`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[{{1, 0}, {3, 2}}, {{0, 0}, {2, 2}}, {0, 4}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.64302885686414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Sqrt", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.643028858385747*^9, 3.643028861832079*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.643028862456256*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"timestwoadd", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", "*", "x"}], " ", "+", " ", "1"}]}]], "Input",
 CellChangeTimes->{{3.643028892312561*^9, 3.643028912051538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timestwoadd", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.6430289151459627`*^9, 3.643028919065549*^9}}],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.643028919370324*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"fn", " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "*", "2"}], " ", "+", " ", "1"}], " ", "&"}]}]], "Input",
 CellChangeTimes->{{3.643028950592473*^9, 3.6430289667362432`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fn", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.643028972624675*^9, 3.643028974633094*^9}}],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.643028975074091*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testifinputis7", "[", "wat_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"wat", "\[Equal]", "7"}], ",", "1", ",", "0"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.64302903295015*^9, 3.643029098155774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testifinputis7", "[", "6.99", "]"}]], "Input",
 CellChangeTimes->{{3.6430291026367807`*^9, 3.6430291116899023`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.643029112034906*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testifinputis7", "[", "7.1", "]"}]], "Input",
 CellChangeTimes->{{3.643029112962945*^9, 3.643029116034864*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.64302911633755*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testifinputis7", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.643029128773405*^9, 3.643029132154874*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.643029132444812*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"testifinputis7", ",", 
   RowBox[{"Range", "[", "10", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643029141812211*^9, 3.6430291512758493`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6430291518010387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"4", ">", "2"}], ",", "1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.643029154777493*^9, 3.6430291595380707`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6430291599559507`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"#", ",", "5"}], "]"}], " ", "&"}], ",", 
   RowBox[{"Range", "[", "30", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643029163454833*^9, 3.643029244864387*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "1", ",", "2", ",", "3", 
   ",", "4", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", 
   "1", ",", "2", ",", "3", ",", "4", ",", "0", ",", "1", ",", "2", ",", "3", 
   ",", "4", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6430291922845583`*^9, 3.643029245613875*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"collatz", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "==", 
      RowBox[{"3", "*", "y"}]}], "||", 
     RowBox[{"x", "==", 
      RowBox[{
       RowBox[{"2", "*", "y"}], "+", "1"}]}], "||", 
     RowBox[{"y", "==", 
      RowBox[{"3", "*", "x"}]}], "||", 
     RowBox[{"y", "\[Equal]", 
      RowBox[{
       RowBox[{"2", "*", "x"}], "+", "1"}]}]}], ",", "1", ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.64302926291676*^9, 3.6430293087082443`*^9}, 
   3.6430295655291157`*^9, {3.643029603775917*^9, 3.643029619016577*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"#", " ", "&"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.643029325953867*^9, 3.6430293340341597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6430293350477047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"#", " ", "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6430293641798887`*^9, 3.643029371079137*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643029371608095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#1", "+", 
     RowBox[{"2", "#2"}]}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643029391197014*^9, 3.643029409566901*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "9", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "10", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643029411112081*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphPlot3D", "[", 
  RowBox[{"AdjacencyGraph", "[", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"collatz", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"150", ",", "150"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643029438363105*^9, 3.64302949491868*^9}, {
  3.6430295263920307`*^9, 3.643029541367312*^9}, {3.64302957967234*^9, 
  3.643029580990744*^9}, {3.643029649033188*^9, 3.643029651070472*^9}, {
  3.643029735523018*^9, 3.643029758559004*^9}}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[GraphicsComplex3DBox[CompressedData["
1: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
e9AY189/3GXsuTR93Lz+C6gQ1As=
    "], {
     {RGBColor[0.5, 0., 0.], 
      Line3DBox[{{1, 3}, {2, 5}, {2, 6}, {3, 7}, {3, 9}, {4, 9}, {4, 12}, {5, 
       11}, {5, 15}, {6, 13}, {6, 18}, {7, 15}, {7, 21}, {8, 17}, {8, 24}, {9,
        19}, {9, 27}, {10, 21}, {10, 30}, {11, 23}, {11, 33}, {12, 25}, {12, 
       36}, {13, 27}, {13, 39}, {14, 29}, {14, 42}, {15, 31}, {15, 45}, {16, 
       33}, {16, 48}, {17, 35}, {17, 51}, {18, 37}, {18, 54}, {19, 39}, {19, 
       57}, {20, 41}, {20, 60}, {21, 43}, {21, 63}, {22, 45}, {22, 66}, {23, 
       47}, {23, 69}, {24, 49}, {24, 72}, {25, 51}, {25, 75}, {26, 53}, {26, 
       78}, {27, 55}, {27, 81}, {28, 57}, {28, 84}, {29, 59}, {29, 87}, {30, 
       61}, {30, 90}, {31, 63}, {31, 93}, {32, 65}, {32, 96}, {33, 67}, {33, 
       99}, {34, 69}, {34, 102}, {35, 71}, {35, 105}, {36, 73}, {36, 108}, {
       37, 75}, {37, 111}, {38, 77}, {38, 114}, {39, 79}, {39, 117}, {40, 
       81}, {40, 120}, {41, 83}, {41, 123}, {42, 85}, {42, 126}, {43, 87}, {
       43, 129}, {44, 89}, {44, 132}, {45, 91}, {45, 135}, {46, 93}, {46, 
       138}, {47, 95}, {47, 141}, {48, 97}, {48, 144}, {49, 99}, {49, 147}, {
       50, 101}, {50, 150}, {51, 103}, {52, 105}, {53, 107}, {54, 109}, {55, 
       111}, {56, 113}, {57, 115}, {58, 117}, {59, 119}, {60, 121}, {61, 
       123}, {62, 125}, {63, 127}, {64, 129}, {65, 131}, {66, 133}, {67, 
       135}, {68, 137}, {69, 139}, {70, 141}, {71, 143}, {72, 145}, {73, 
       147}, {74, 149}}]}, 
     {RGBColor[0, 0, 0.7], 
      TagBox[
       TooltipBox[Point3DBox[1],
        "1"],
       Annotation[#, 1, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[2],
        "2"],
       Annotation[#, 2, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[3],
        "3"],
       Annotation[#, 3, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[4],
        "4"],
       Annotation[#, 4, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[5],
        "5"],
       Annotation[#, 5, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[6],
        "6"],
       Annotation[#, 6, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[7],
        "7"],
       Annotation[#, 7, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[8],
        "8"],
       Annotation[#, 8, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[9],
        "9"],
       Annotation[#, 9, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[10],
        "10"],
       Annotation[#, 10, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[11],
        "11"],
       Annotation[#, 11, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[12],
        "12"],
       Annotation[#, 12, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[13],
        "13"],
       Annotation[#, 13, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[14],
        "14"],
       Annotation[#, 14, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[15],
        "15"],
       Annotation[#, 15, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[16],
        "16"],
       Annotation[#, 16, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[17],
        "17"],
       Annotation[#, 17, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[18],
        "18"],
       Annotation[#, 18, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[19],
        "19"],
       Annotation[#, 19, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[20],
        "20"],
       Annotation[#, 20, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[21],
        "21"],
       Annotation[#, 21, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[22],
        "22"],
       Annotation[#, 22, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[23],
        "23"],
       Annotation[#, 23, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[24],
        "24"],
       Annotation[#, 24, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[25],
        "25"],
       Annotation[#, 25, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[26],
        "26"],
       Annotation[#, 26, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[27],
        "27"],
       Annotation[#, 27, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[28],
        "28"],
       Annotation[#, 28, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[29],
        "29"],
       Annotation[#, 29, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[30],
        "30"],
       Annotation[#, 30, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[31],
        "31"],
       Annotation[#, 31, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[32],
        "32"],
       Annotation[#, 32, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[33],
        "33"],
       Annotation[#, 33, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[34],
        "34"],
       Annotation[#, 34, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[35],
        "35"],
       Annotation[#, 35, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[36],
        "36"],
       Annotation[#, 36, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[37],
        "37"],
       Annotation[#, 37, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[38],
        "38"],
       Annotation[#, 38, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[39],
        "39"],
       Annotation[#, 39, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[40],
        "40"],
       Annotation[#, 40, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[41],
        "41"],
       Annotation[#, 41, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[42],
        "42"],
       Annotation[#, 42, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[43],
        "43"],
       Annotation[#, 43, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[44],
        "44"],
       Annotation[#, 44, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[45],
        "45"],
       Annotation[#, 45, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[46],
        "46"],
       Annotation[#, 46, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[47],
        "47"],
       Annotation[#, 47, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[48],
        "48"],
       Annotation[#, 48, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[49],
        "49"],
       Annotation[#, 49, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[50],
        "50"],
       Annotation[#, 50, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[51],
        "51"],
       Annotation[#, 51, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[52],
        "52"],
       Annotation[#, 52, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[53],
        "53"],
       Annotation[#, 53, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[54],
        "54"],
       Annotation[#, 54, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[55],
        "55"],
       Annotation[#, 55, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[56],
        "56"],
       Annotation[#, 56, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[57],
        "57"],
       Annotation[#, 57, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[58],
        "58"],
       Annotation[#, 58, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[59],
        "59"],
       Annotation[#, 59, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[60],
        "60"],
       Annotation[#, 60, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[61],
        "61"],
       Annotation[#, 61, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[62],
        "62"],
       Annotation[#, 62, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[63],
        "63"],
       Annotation[#, 63, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[64],
        "64"],
       Annotation[#, 64, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[65],
        "65"],
       Annotation[#, 65, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[66],
        "66"],
       Annotation[#, 66, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[67],
        "67"],
       Annotation[#, 67, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[68],
        "68"],
       Annotation[#, 68, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[69],
        "69"],
       Annotation[#, 69, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[70],
        "70"],
       Annotation[#, 70, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[71],
        "71"],
       Annotation[#, 71, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[72],
        "72"],
       Annotation[#, 72, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[73],
        "73"],
       Annotation[#, 73, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[74],
        "74"],
       Annotation[#, 74, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[75],
        "75"],
       Annotation[#, 75, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[76],
        "76"],
       Annotation[#, 76, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[77],
        "77"],
       Annotation[#, 77, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[78],
        "78"],
       Annotation[#, 78, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[79],
        "79"],
       Annotation[#, 79, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[80],
        "80"],
       Annotation[#, 80, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[81],
        "81"],
       Annotation[#, 81, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[82],
        "82"],
       Annotation[#, 82, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[83],
        "83"],
       Annotation[#, 83, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[84],
        "84"],
       Annotation[#, 84, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[85],
        "85"],
       Annotation[#, 85, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[86],
        "86"],
       Annotation[#, 86, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[87],
        "87"],
       Annotation[#, 87, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[88],
        "88"],
       Annotation[#, 88, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[89],
        "89"],
       Annotation[#, 89, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[90],
        "90"],
       Annotation[#, 90, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[91],
        "91"],
       Annotation[#, 91, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[92],
        "92"],
       Annotation[#, 92, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[93],
        "93"],
       Annotation[#, 93, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[94],
        "94"],
       Annotation[#, 94, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[95],
        "95"],
       Annotation[#, 95, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[96],
        "96"],
       Annotation[#, 96, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[97],
        "97"],
       Annotation[#, 97, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[98],
        "98"],
       Annotation[#, 98, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[99],
        "99"],
       Annotation[#, 99, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[100],
        "100"],
       Annotation[#, 100, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[101],
        "101"],
       Annotation[#, 101, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[102],
        "102"],
       Annotation[#, 102, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[103],
        "103"],
       Annotation[#, 103, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[104],
        "104"],
       Annotation[#, 104, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[105],
        "105"],
       Annotation[#, 105, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[106],
        "106"],
       Annotation[#, 106, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[107],
        "107"],
       Annotation[#, 107, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[108],
        "108"],
       Annotation[#, 108, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[109],
        "109"],
       Annotation[#, 109, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[110],
        "110"],
       Annotation[#, 110, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[111],
        "111"],
       Annotation[#, 111, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[112],
        "112"],
       Annotation[#, 112, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[113],
        "113"],
       Annotation[#, 113, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[114],
        "114"],
       Annotation[#, 114, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[115],
        "115"],
       Annotation[#, 115, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[116],
        "116"],
       Annotation[#, 116, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[117],
        "117"],
       Annotation[#, 117, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[118],
        "118"],
       Annotation[#, 118, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[119],
        "119"],
       Annotation[#, 119, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[120],
        "120"],
       Annotation[#, 120, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[121],
        "121"],
       Annotation[#, 121, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[122],
        "122"],
       Annotation[#, 122, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[123],
        "123"],
       Annotation[#, 123, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[124],
        "124"],
       Annotation[#, 124, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[125],
        "125"],
       Annotation[#, 125, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[126],
        "126"],
       Annotation[#, 126, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[127],
        "127"],
       Annotation[#, 127, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[128],
        "128"],
       Annotation[#, 128, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[129],
        "129"],
       Annotation[#, 129, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[130],
        "130"],
       Annotation[#, 130, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[131],
        "131"],
       Annotation[#, 131, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[132],
        "132"],
       Annotation[#, 132, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[133],
        "133"],
       Annotation[#, 133, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[134],
        "134"],
       Annotation[#, 134, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[135],
        "135"],
       Annotation[#, 135, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[136],
        "136"],
       Annotation[#, 136, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[137],
        "137"],
       Annotation[#, 137, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[138],
        "138"],
       Annotation[#, 138, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[139],
        "139"],
       Annotation[#, 139, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[140],
        "140"],
       Annotation[#, 140, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[141],
        "141"],
       Annotation[#, 141, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[142],
        "142"],
       Annotation[#, 142, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[143],
        "143"],
       Annotation[#, 143, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[144],
        "144"],
       Annotation[#, 144, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[145],
        "145"],
       Annotation[#, 145, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[146],
        "146"],
       Annotation[#, 146, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[147],
        "147"],
       Annotation[#, 147, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[148],
        "148"],
       Annotation[#, 148, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[149],
        "149"],
       Annotation[#, 149, "Tooltip"]& ], 
      TagBox[
       TooltipBox[Point3DBox[150],
        "150"],
       Annotation[#, 150, "Tooltip"]& ]}}],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxllXk01Hsfx4cs2cZgMLbZMswYM8bQrYv6fezaLN1ka7Ml6koSeVLJ2iVd
96mkrBEqkSRZwjeyLzWipwVR3ZIkoVSKp3Pq3Oc8/X7nfP/5ndd5nfd5fz6/
35fhs3u9vziBQEj7dhZ9O/X99xMiJnWh1LFPSGylIVUPK7a81WIIcU508LTk
wPagS9NaoxrotISoeaFFAl6VZX38XMaC2dFilksOFR1rXj1VIrEYZB81Eayc
uVAcI/txaS0daXS+m+cYy4K6aP72YQYbZgXJbreek9Hg+nOnn4RJg3ysnR/T
1wCcjEKeNSxQ0QTTMNYzQRzSs+k9k9pL4FB9SGbPBk0UkSb0xx7KwKLrc1d4
FCGI+UiWNRVpoK651SEHZ5QgZffFXX8cZQPFhL9vtSkDhUXWHNjJlALb2aGj
Owo04J78hdy6Zi20erbAg9tLhEyHJZ3HWQaAJLKyTm9VRE6XLUTNl6Ug2C/S
1U6DD9PeI49sDenoUqgZd+pPBTjhe4Tt9DcHXrupMpdcZiAzs1yj5scEmKTM
mfs+kobxuwm917qUkSQ9Y976LAEWitdea1RnwXEDZkr5jCpKGyli6L6UhR2W
lYJ6Bg/WCup/2eO2GCVELnqpqE+CNr7kSvMjQihwe1BdZ66DvnDz28uqlCCj
xa1Q2dUQGItt31hm0FFw1PhAl4I4MFtLDx7azIZbVkJz7gITnbol3qX65Cs2
OeBTnabwHvtT7JbstD8D5RIIx87pqcOSR1zsVBUV3rsOjJNaNNDVmPmRIzdk
YcVgnn1lMgue2xSJ7eATUf6nwY2Zy5TArGLL9azzBrCWXLeQJCeJvNyJ5Lib
BDjT5R+pG2EMqVPU+CNeakhazin64rgSdNN0i8qWCyCkNF0/dC0d1R1bXOUl
RYQL660ynZdOYfEuq2IjeGxE+PFcErrzP97kwGj22bULt5lIJWeXeV6KJBzj
i6vGpetDnmrSToNGFiob1Xyb6/QEq7iazxl0UIRLlhUnXu0no8zsd/Jh58Qg
1S5AgdxChrOD66wbc3XQIae3E9StSrC+ckQz+AITbgd1/GtSXQ3Nywm8nsgq
QH7d5Oe3E0rwc56Q+WiZQG1DyDw/NEAYJ6Lx7EZSuZECGJorV1MtuMAeKfKy
S51tqKpun9+q+hxzrbUZl7pkAl/v9q2ceaCDdn3tWaeSqwymr1TTPmwwgr//
3ZPZIUZF/ntOHc7IIYFTtYJ1cjYPArJbf40MZCBft+PE0G/7+XjpcEbAXhoI
DnzPk9j6ouvEGpkVvJrt7m+jOVCprR/cqb8EdQ2ZPN43NItZp4UYkNs4UNiU
FaO5Vg8ZXWkRT3KQgap9J5QJswQIna/0dZ+koxZuybiZvBpot20wM7YTA7kp
2VoXfyXUfsys9XLlPLbCxdtnJ0UDps6kyU2zKYglChA94UmD/2F9ofEuXVye
wGexir0MPXCYzly08aMS+rLATXY8SYSawp2bYy/T4dJe88BnS1VQYVNeanus
MgSFR3yyeWQAVZZnBZ02nxo2xxj1UqrmsbBrt2UVpPlgUz0kGNspjqQ26clZ
nFAC+T3JkdvcBJCq8ZD3rIKMKgdGuOmKSjD4bEtaKZWDy1NLvyipdsAYGDHT
ec5BNNRl/dT/yB4S8BSLl12TXwq90YcuRhvqID+r2a5FvcowZ9R+SjFXDO75
fffcj0yVUhG1rBgKsNUmbOLB8FjocJWAgfS4roUemXNYZWl5YQVwISNSp5P9
nolmonyEziulwKkOii+IeGB04P/3Z/NZG2fnW/pQg6mPPy3QRW2fp/vebJrC
mNeeX9++3gAy5Xd77lBmofTGhFfcc48xevqvid5EOSDet9DzIpDR+xpKYM3Q
F4yQkmQvy/obe6HaEl0nYiC1AduAk5oU0DxabeO36dsekWtTJIQ0FJRqLm5L
VoHt9i/VVKwEuDyWzYat6p10sLZQj+ipVUdNZ++HFpPkoT+Y2uEsrQrRUkW8
lFkKGj4V33PFbxF8QLez843VcP2EBtIflxNZ4JD8sVC4VgYlRcOqOZEyaDhV
Db6kGUBYjG2jyQlFZCVn3mr3GxFYAv4DlwxjXJ6vB9slr5K5QEl/1/2kdaGh
/wy3TD1mBoumrMrc/RsXUO2ZUgNWS4Ol5USVnsFnrEGnaKeilyk8+iVuVnaK
ikhBFUOOpSqgtb/bPZkuhPmC6wXXCapogz+tx/qpMsgsU/iiLi+A7E92+4Jf
aKJOjnGIuJkSPKfsO5M6I8TluTvVeo70ixHYH/cWL1JgoF05LgrLPstAvthN
zzvrTHD8CNNmm6CGAbyf3v/IjT08//29lYcZcThndAV7rMDVfR8Hwn7fK+p9
vASVb21quT/wDvMZE9cmFuH9A+3p4uvqOUDe9akg8You4o3MSnOKpYFxb9Xg
WoIpjm+jtNqzlnzBjE8SiB1uDHSsNOjG0xY10E/XFYUn6MNo9QXKwWS9f/j9
AvPhN32fsAdywSXSvSS0xk1zTj1tARuuTc1O9sD7DVkOdtHLyUAN+Li71EIN
EcKXKnW4S0DO+f9s7SjH8x6JB26X7NLD9VN8ckRBz1gFxl5/mLLeTUWn8xQ7
gnWUIaYiyO5IIQtWBBAqN2WR0ILDS1FLmiJsSaEyZL59vz/7+xK5sqMnGHCB
2WCxPJ6MwmMt29sySFD9o//K0PoHuUP/40PN++asywzgqLeCpz72rqGjyPFd
eN5XrOTNxfVJLHn4eV53/OyXe8bwweG+6EpnyXxDWnEciUdSAY79+aud+TM4
v1ONoLt/Px98b8TeLHmmhHL76QLUpQjBxTVSkZaL4Gde9LqczaVxcf30Ddft
M/Llwv6Q0Zxxj3cNyKTlw2GnZizD8sWY65Qx5K0+eBLW0JG89r3Mpn4S2Jvk
m8oby+P8d2r6pkv3moJ5RNS72EgdJLqZdPX0DWVIHbS96pSqjOMri0IdTnrJ
wHTW9zwvwwwXq6W9WHGvVm4m6q0RTKfzj0ZUUhE1VzXKe6Uy5FZkOqay+fDU
eZNnwjUGkqiPa48qf49FMcwcNBar4/w9gdeGX+YbgmvUxK/kI0xUEcrrbvOQ
gh3+/CdPD2vh+O//Ve4/czcrvBB/kJZvcYe29Ou2MC3g/9RbyrJwhsFyfZi2
cUyN/YuFxm1zXasb3mAbLjLDL8/ScH4eo/ei92cORGrYZG+01kXL5XwKdbTG
sdzwZKnaZUwcH/VbXrfJgDScDwltGDungi6WnTFflTiL3bbbuGpzLweKYvt4
jlH6aOfkwa1u22Uh+scexoTNPe5gMlHx9GOftLsUSEuX7M3Zq4vzz8hQZOOO
LQbTT+XDREc6mq00Lh3PI8OxmsNZcVf0cHz38R6eXhwf189k200J9uk5TM7p
K+25EwnFk1+GaTV+xnwqVFBnOw2a8j3FBRvV0c4V8SVXkuQhZuDTjsDXbJx/
5fwyrcR2NdjuEX2D+gcFaZlGNqdpS8L++b2mjvpcHN8XpfHRX1ETtz9bZ0RP
S3YxcfMy2uZ+aWO5LlQsDdYvTpdED4tSDrWLkyGYPrEg9OXh9ydc/qGiDhvW
0zkTznkk1FgXofxXPRH8rHZ0qucY4fjv944A1091/KnIaAIdxNoieuwtlBE1
wVIUP68Cr/un3tSkc2Hb7HPLlbpzDaa0r/d+J01gPOGeNYfeCHD+xg5Lete3
HibJnHsPIkYbci0otCDjLxjbmn81RE6I49Wfamjuf2YKXRkG2tHlNITKpF2m
fydDR5R1wutMPkxmSY3ZNX9pWKN33fFUtxKcx7oj+rOFIKtSYxQ2p4K2FOcX
Us6owJINr9V8OSY4/9vuW5k8BwG4RPloOyJ1pFc39aHYWwmo/heiXO1Ncfz3
e9AY189/3GXsuTR93Lz+C6gQ1As=
     "]]& ],
  AspectRatio->Automatic,
  ImageSize->{615., 430.},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{-0.9580728241474366, -3.048269913808533, 1.113618873852213},
  ViewVertical->{-0.3308192784751488, -0.36873790119493527`, 
   3.090942995063007}]], "Output",
 CellChangeTimes->{{3.643029738391512*^9, 3.64302975955499*^9}}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}, {Null, 
       SparseArray[
       Automatic, {50, 50}, 0, {
        1, {{0, 1, 3, 6, 8, 11, 14, 17, 19, 23, 25, 28, 31, 34, 36, 40, 42, 
          44, 46, 48, 49, 52, 53, 55, 57, 58, 58, 60, 60, 61, 62, 63, 63, 65, 
          65, 66, 67, 68, 68, 70, 70, 71, 72, 73, 73, 75, 75, 76, 77, 78, 
          78}, {{3}, {5}, {6}, {1}, {7}, {9}, {9}, {12}, {2}, {11}, {15}, {
          2}, {13}, {18}, {3}, {15}, {21}, {17}, {24}, {3}, {4}, {19}, {27}, {
          21}, {30}, {5}, {23}, {33}, {4}, {25}, {36}, {6}, {27}, {39}, {
          29}, {42}, {5}, {7}, {31}, {45}, {33}, {48}, {8}, {35}, {6}, {37}, {
          9}, {39}, {41}, {7}, {10}, {43}, {45}, {11}, {47}, {8}, {49}, {
          12}, {9}, {13}, {14}, {10}, {15}, {11}, {16}, {17}, {12}, {18}, {
          13}, {19}, {20}, {14}, {21}, {15}, {22}, {23}, {16}, {24}}}, 
         Pattern}]}, {
      GraphStyle -> "SmallNetwork", GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]]}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.625, 0.5, 0.7], 
        Thickness[Large], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$21", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$24", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$19", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$27", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$21", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$30", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$23", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$33", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$25", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$36", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$13", Automatic, Center], 
         DynamicLocation["VertexID$27", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$13", Automatic, Center], 
         DynamicLocation["VertexID$39", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$14", Automatic, Center], 
         DynamicLocation["VertexID$29", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$14", Automatic, Center], 
         DynamicLocation["VertexID$42", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$15", Automatic, Center], 
         DynamicLocation["VertexID$31", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$15", Automatic, Center], 
         DynamicLocation["VertexID$45", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$16", Automatic, Center], 
         DynamicLocation["VertexID$33", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$16", Automatic, Center], 
         DynamicLocation["VertexID$48", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$17", Automatic, Center], 
         DynamicLocation["VertexID$35", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$18", Automatic, Center], 
         DynamicLocation["VertexID$37", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$19", Automatic, Center], 
         DynamicLocation["VertexID$39", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$20", Automatic, Center], 
         DynamicLocation["VertexID$41", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$21", Automatic, Center], 
         DynamicLocation["VertexID$43", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$22", Automatic, Center], 
         DynamicLocation["VertexID$45", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$23", Automatic, Center], 
         DynamicLocation["VertexID$47", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$24", Automatic, Center], 
         DynamicLocation["VertexID$49", Automatic, Center]}]}, {
       Directive[
        Hue[0.125, 0.7, 0.9], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.3784945533268917`, -3.760928966982116}, {
           3.708575768015434, -3.760928966982116}, {
           3.8736163753597057`, -3.760928966982116}, {
           3.8736163753597057`, -3.5958883596378444`}, {
           3.8736163753597057`, -3.265807144949302}, {
           3.8736163753597057`, -3.1007665376050304`}, {
           3.708575768015434, -3.1007665376050304`}, {
           3.3784945533268917`, -3.1007665376050304`}, {
           3.21345394598262, -3.1007665376050304`}, {
           3.21345394598262, -3.265807144949302}, {
           3.21345394598262, -3.5958883596378444`}, {
           3.21345394598262, -3.760928966982116}, {
           3.3784945533268917`, -3.760928966982116}}}], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.612267940709185, -5.666220014069352}, {
           6.942349155397728, -5.666220014069352}, {
           7.107389762741999, -5.666220014069352}, {
           7.107389762741999, -5.501179406725081}, {
           7.107389762741999, -5.171098192036538}, {
           7.107389762741999, -5.006057584692267}, {
           6.942349155397728, -5.006057584692267}, {
           6.612267940709185, -5.006057584692267}, {
           6.447227333364914, -5.006057584692267}, {
           6.447227333364914, -5.171098192036538}, {
           6.447227333364914, -5.501179406725081}, {
           6.447227333364914, -5.666220014069352}, {
           6.612267940709185, -5.666220014069352}}}], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.907400552998566, -4.135455590796605}, {
           4.237481767687108, -4.135455590796605}, {
           4.4025223750313796`, -4.135455590796605}, {
           4.4025223750313796`, -3.9704149834523332`}, {
           4.4025223750313796`, -3.640333768763791}, {
           4.4025223750313796`, -3.4752931614195193`}, {
           4.237481767687108, -3.4752931614195193`}, {
           3.907400552998566, -3.4752931614195193`}, {
           3.7423599456542944`, -3.4752931614195193`}, {
           3.7423599456542944`, -3.640333768763791}, {
           3.7423599456542944`, -3.9704149834523332`}, {
           3.7423599456542944`, -4.135455590796605}, {
           3.907400552998566, -4.135455590796605}}}], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           1.8709468479076528`, -5.412482185203566}, {
           2.2010280625961953`, -5.412482185203566}, {
           2.366068669940467, -5.412482185203566}, {
           2.366068669940467, -5.247441577859295}, {
           2.366068669940467, -4.9173603631707525`}, {
           2.366068669940467, -4.752319755826481}, {
           2.2010280625961953`, -4.752319755826481}, {
           1.8709468479076528`, -4.752319755826481}, {
           1.7059062405633814`, -4.752319755826481}, {
           1.7059062405633814`, -4.9173603631707525`}, {
           1.7059062405633814`, -5.247441577859295}, {
           1.7059062405633814`, -5.412482185203566}, {
           1.8709468479076528`, -5.412482185203566}}}], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.349523331498585, -4.738448340478673}, {
           7.679604546187127, -4.738448340478673}, {
           7.844645153531398, -4.738448340478673}, {
           7.844645153531398, -4.573407733134402}, {
           7.844645153531398, -4.243326518445859}, {
           7.844645153531398, -4.078285911101588}, {
           7.679604546187127, -4.078285911101588}, {
           7.349523331498585, -4.078285911101588}, {
           7.184482724154313, -4.078285911101588}, {
           7.184482724154313, -4.243326518445859}, {
           7.184482724154313, -4.573407733134402}, {
           7.184482724154313, -4.738448340478673}, {
           7.349523331498585, -4.738448340478673}}}], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           5.734325434059686, -6.456475741533412}, {
           6.064406648748228, -6.456475741533412}, {
           6.2294472560925, -6.456475741533412}, {
           6.2294472560925, -6.291435134189141}, {
           6.2294472560925, -5.961353919500598}, {
           6.2294472560925, -5.796313312156327}, {
           6.064406648748228, -5.796313312156327}, {
           5.734325434059686, -5.796313312156327}, {
           5.569284826715415, -5.796313312156327}, {
           5.569284826715415, -5.961353919500598}, {
           5.569284826715415, -6.291435134189141}, {
           5.569284826715415, -6.456475741533412}, {
           5.734325434059686, -6.456475741533412}}}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           5.01686974730581, -3.3420319526864923`}, {
           5.346950961994352, -3.3420319526864923`}, {
           5.511991569338623, -3.3420319526864923`}, {
           5.511991569338623, -3.1769913453422207`}, {
           5.511991569338623, -2.8469101306536784`}, {
           5.511991569338623, -2.6818695233094068`}, {
           5.346950961994352, -2.6818695233094068`}, {
           5.01686974730581, -2.6818695233094068`}, {
           4.851829139961539, -2.6818695233094068`}, {
           4.851829139961539, -2.8469101306536784`}, {
           4.851829139961539, -3.1769913453422207`}, {
           4.851829139961539, -3.3420319526864923`}, {
           5.01686974730581, -3.3420319526864923`}}}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           2.0758869256701664`, -8.580828711940589}, {
           2.4059681403587088`, -8.580828711940589}, {
           2.5710087477029804`, -8.580828711940589}, {
           2.5710087477029804`, -8.415788104596318}, {
           2.5710087477029804`, -8.085706889907774}, {
           2.5710087477029804`, -7.920666282563504}, {
           2.4059681403587088`, -7.920666282563504}, {
           2.0758869256701664`, -7.920666282563504}, {
           1.9108463183258948`, -7.920666282563504}, {
           1.9108463183258948`, -8.085706889907774}, {
           1.9108463183258948`, -8.415788104596318}, {
           1.9108463183258948`, -8.580828711940589}, {
           2.0758869256701664`, -8.580828711940589}}}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.0979113458780327`, -5.185579576066442}, {
           3.427992560566575, -5.185579576066442}, {
           3.5930331679108467`, -5.185579576066442}, {
           3.5930331679108467`, -5.020538968722171}, {
           3.5930331679108467`, -4.690457754033629}, {
           3.5930331679108467`, -4.525417146689358}, {
           3.427992560566575, -4.525417146689358}, {
           3.0979113458780327`, -4.525417146689358}, {
           2.932870738533761, -4.525417146689358}, {
           2.932870738533761, -4.690457754033629}, {
           2.932870738533761, -5.020538968722171}, {
           2.932870738533761, -5.185579576066442}, {
           3.0979113458780327`, -5.185579576066442}}}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.221318743160892, -1.2620091176991477`}, {
           4.551399957849434, -1.2620091176991477`}, {
           4.716440565193706, -1.2620091176991477`}, {
           4.716440565193706, -1.0969685103548763`}, {
           4.716440565193706, -0.7668872956663335}, {
           4.716440565193706, -0.6018466883220621}, {
           4.551399957849434, -0.6018466883220621}, {
           4.221318743160892, -0.6018466883220621}, {
           4.056278135816621, -0.6018466883220621}, {
           4.056278135816621, -0.7668872956663335}, {
           4.056278135816621, -1.0969685103548763`}, {
           4.056278135816621, -1.2620091176991477`}, {
           4.221318743160892, -1.2620091176991477`}}}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           8.740666563812825, -4.939456543988207}, {
           9.070747778501369, -4.939456543988207}, {
           9.23578838584564, -4.939456543988207}, {
           9.23578838584564, -4.774415936643936}, {
           9.23578838584564, -4.444334721955394}, {
           9.23578838584564, -4.2792941146111225`}, {
           9.070747778501369, -4.2792941146111225`}, {
           8.740666563812825, -4.2792941146111225`}, {
           8.575625956468555, -4.2792941146111225`}, {
           8.575625956468555, -4.444334721955394}, {
           8.575625956468555, -4.774415936643936}, {
           8.575625956468555, -4.939456543988207}, {
           8.740666563812825, -4.939456543988207}}}], "DynamicName", BoxID -> 
          "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.7923134272889205, -5.635188211554045}, {
           1.1223946419774633`, -5.635188211554045}, {
           1.2874352493217347`, -5.635188211554045}, {
           1.2874352493217347`, -5.470147604209774}, {
           1.2874352493217347`, -5.140066389521231}, {
           1.2874352493217347`, -4.97502578217696}, {
           1.1223946419774633`, -4.97502578217696}, {
           0.7923134272889205, -4.97502578217696}, {
           0.6272728199446491, -4.97502578217696}, {
           0.6272728199446491, -5.140066389521231}, {
           0.6272728199446491, -5.470147604209774}, {
           0.6272728199446491, -5.635188211554045}, {
           0.7923134272889205, -5.635188211554045}}}], "DynamicName", BoxID -> 
          "VertexID$12"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.596623567710757, -6.321722117822097}, {
           4.926704782399299, -6.321722117822097}, {
           5.09174538974357, -6.321722117822097}, {
           5.09174538974357, -6.156681510477826}, {
           5.09174538974357, -5.826600295789284}, {
           5.09174538974357, -5.661559688445013}, {
           4.926704782399299, -5.661559688445013}, {
           4.596623567710757, -5.661559688445013}, {
           4.431582960366486, -5.661559688445013}, {
           4.431582960366486, -5.826600295789284}, {
           4.431582960366486, -6.156681510477826}, {
           4.431582960366486, -6.321722117822097}, {
           4.596623567710757, -6.321722117822097}}}], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           5.590403440384798, -8.580828566522818}, {
           5.9204846550733405`, -8.580828566522818}, {
           6.085525262417612, -8.580828566522818}, {
           6.085525262417612, -8.415787959178548}, {
           6.085525262417612, -8.085706744490004}, {
           6.085525262417612, -7.920666137145734}, {
           5.9204846550733405`, -7.920666137145734}, {
           5.590403440384798, -7.920666137145734}, {
           5.425362833040527, -7.920666137145734}, {
           5.425362833040527, -8.085706744490004}, {
           5.425362833040527, -8.415787959178548}, {
           5.425362833040527, -8.580828566522818}, {
           5.590403440384798, -8.580828566522818}}}], "DynamicName", BoxID -> 
          "VertexID$14"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.413972924380216, -3.708661048617451}, {
           6.7440541390687585`, -3.708661048617451}, {
           6.90909474641303, -3.708661048617451}, {
           6.90909474641303, -3.5436204412731795`}, {
           6.90909474641303, -3.213539226584637}, {
           6.90909474641303, -3.0484986192403656`}, {
           6.7440541390687585`, -3.0484986192403656`}, {
           6.413972924380216, -3.0484986192403656`}, {
           6.248932317035945, -3.0484986192403656`}, {
           6.248932317035945, -3.213539226584637}, {
           6.248932317035945, -3.5436204412731795`}, {
           6.248932317035945, -3.708661048617451}, {
           6.413972924380216, -3.708661048617451}}}], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          DynamicLocation["VertexID$15", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           10.579580548311322`, -5.791821637489416}, {
           10.909661762999866`, -5.791821637489416}, {
           11.074702370344136`, -5.791821637489416}, {
           11.074702370344136`, -5.626781030145144}, {
           11.074702370344136`, -5.296699815456602}, {
           11.074702370344136`, -5.131659208112331}, {
           10.909661762999866`, -5.131659208112331}, {
           10.579580548311322`, -5.131659208112331}, {
           10.414539940967051`, -5.131659208112331}, {
           10.414539940967051`, -5.296699815456602}, {
           10.414539940967051`, -5.626781030145144}, {
           10.414539940967051`, -5.791821637489416}, {
           10.579580548311322`, -5.791821637489416}}}], "DynamicName", BoxID -> 
          "VertexID$16"], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          DynamicLocation["VertexID$16", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.1413262376171396`, -8.58082858683299}, {
           3.471407452305682, -8.58082858683299}, {
           3.6364480596499535`, -8.58082858683299}, {
           3.6364480596499535`, -8.41578797948872}, {
           3.6364480596499535`, -8.085706764800175}, {
           3.6364480596499535`, -7.920666157455905}, {
           3.471407452305682, -7.920666157455905}, {
           3.1413262376171396`, -7.920666157455905}, {
           2.976285630272868, -7.920666157455905}, {
           2.976285630272868, -8.085706764800175}, {
           2.976285630272868, -8.41578797948872}, {
           2.976285630272868, -8.58082858683299}, {
           3.1413262376171396`, -8.58082858683299}}}], "DynamicName", BoxID -> 
          "VertexID$17"], 
         InsetBox[
          FormBox["17", TraditionalForm], 
          DynamicLocation["VertexID$17", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$17"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           5.923004084791883, -7.378335360728108}, {
           6.253085299480425, -7.378335360728108}, {
           6.418125906824696, -7.378335360728108}, {
           6.418125906824696, -7.2132947533838365`}, {
           6.418125906824696, -6.883213538695294}, {
           6.418125906824696, -6.718172931351023}, {
           6.253085299480425, -6.718172931351023}, {
           5.923004084791883, -6.718172931351023}, {
           5.757963477447611, -6.718172931351023}, {
           5.757963477447611, -6.883213538695294}, {
           5.757963477447611, -7.2132947533838365`}, {
           5.757963477447611, -7.378335360728108}, {
           5.923004084791883, -7.378335360728108}}}], "DynamicName", BoxID -> 
          "VertexID$18"], 
         InsetBox[
          FormBox["18", TraditionalForm], 
          DynamicLocation["VertexID$18", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$18"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.2070721165862435`, -5.966655069864619}, {
           3.537153331274786, -5.966655069864619}, {
           3.7021939386190574`, -5.966655069864619}, {
           3.7021939386190574`, -5.801614462520348}, {
           3.7021939386190574`, -5.471533247831806}, {
           3.7021939386190574`, -5.3064926404875346`}, {
           3.537153331274786, -5.3064926404875346`}, {
           3.2070721165862435`, -5.3064926404875346`}, {
           3.042031509241972, -5.3064926404875346`}, {
           3.042031509241972, -5.471533247831806}, {
           3.042031509241972, -5.801614462520348}, {
           3.042031509241972, -5.966655069864619}, {
           3.2070721165862435`, -5.966655069864619}}}], "DynamicName", BoxID -> 
          "VertexID$19"], 
         InsetBox[
          FormBox["19", TraditionalForm], 
          DynamicLocation["VertexID$19", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$19"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           8.109363353646154, -8.58082856652282}, {
           8.439444568334698, -8.58082856652282}, {
           8.604485175678969, -8.58082856652282}, {
           8.604485175678969, -8.41578795917855}, {
           8.604485175678969, -8.085706744490006}, {
           8.604485175678969, -7.920666137145735}, {
           8.439444568334698, -7.920666137145735}, {
           8.109363353646154, -7.920666137145735}, {
           7.944322746301884, -7.920666137145735}, {
           7.944322746301884, -8.085706744490006}, {
           7.944322746301884, -8.41578795917855}, {
           7.944322746301884, -8.58082856652282}, {
           8.109363353646154, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$20"], 
         InsetBox[
          FormBox["20", TraditionalForm], 
          DynamicLocation["VertexID$20", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$20"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.643785628889918, -2.1589201183633278`}, {
           4.9738668435784605`, -2.1589201183633278`}, {
           5.138907450922732, -2.1589201183633278`}, {
           5.138907450922732, -1.9938795110190564`}, {
           5.138907450922732, -1.6637982963305136`}, {
           5.138907450922732, -1.4987576889862422`}, {
           4.9738668435784605`, -1.4987576889862422`}, {
           4.643785628889918, -1.4987576889862422`}, {
           4.478745021545647, -1.4987576889862422`}, {
           4.478745021545647, -1.6637982963305136`}, {
           4.478745021545647, -1.9938795110190564`}, {
           4.478745021545647, -2.1589201183633278`}, {
           4.643785628889918, -2.1589201183633278`}}}], "DynamicName", BoxID -> 
          "VertexID$21"], 
         InsetBox[
          FormBox["21", TraditionalForm], 
          DynamicLocation["VertexID$21", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$21"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.514666332108913, -2.4652130357510935`}, {
           7.844747546797455, -2.4652130357510935`}, {
           8.009788154141727, -2.4652130357510935`}, {
           8.009788154141727, -2.300172428406822}, {
           8.009788154141727, -1.9700912137182793`}, {
           8.009788154141727, -1.805050606374008}, {
           7.844747546797455, -1.805050606374008}, {
           7.514666332108913, -1.805050606374008}, {
           7.349625724764642, -1.805050606374008}, {
           7.349625724764642, -1.9700912137182793`}, {
           7.349625724764642, -2.300172428406822}, {
           7.349625724764642, -2.4652130357510935`}, {
           7.514666332108913, -2.4652130357510935`}}}], "DynamicName", BoxID -> 
          "VertexID$22"], 
         InsetBox[
          FormBox["22", TraditionalForm], 
          DynamicLocation["VertexID$22", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$22"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           9.554953938046548, -4.5896839731307715`}, {
           9.885035152735092, -4.5896839731307715`}, {
           10.050075760079363`, -4.5896839731307715`}, {
           10.050075760079363`, -4.4246433657865}, {
           10.050075760079363`, -4.094562151097958}, {
           10.050075760079363`, -3.9295215437536863`}, {
           9.885035152735092, -3.9295215437536863`}, {
           9.554953938046548, -3.9295215437536863`}, {
           9.389913330702278, -3.9295215437536863`}, {
           9.389913330702278, -4.094562151097958}, {
           9.389913330702278, -4.4246433657865}, {
           9.389913330702278, -4.5896839731307715`}, {
           9.554953938046548, -4.5896839731307715`}}}], "DynamicName", BoxID -> 
          "VertexID$23"], 
         InsetBox[
          FormBox["23", TraditionalForm], 
          DynamicLocation["VertexID$23", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$23"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           1.0123570127375332`, -8.58082858721117}, {
           1.342438227426076, -8.58082858721117}, {
           1.5074788347703474`, -8.58082858721117}, {
           1.5074788347703474`, -8.4157879798669}, {
           1.5074788347703474`, -8.085706765178356}, {
           1.5074788347703474`, -7.920666157834086}, {
           1.342438227426076, -7.920666157834086}, {
           1.0123570127375332`, -7.920666157834086}, {
           0.8473164053932618, -7.920666157834086}, {
           0.8473164053932618, -8.085706765178356}, {
           0.8473164053932618, -8.4157879798669}, {
           0.8473164053932618, -8.58082858721117}, {
           1.0123570127375332`, -8.58082858721117}}}], "DynamicName", BoxID -> 
          "VertexID$24"], 
         InsetBox[
          FormBox["24", TraditionalForm], 
          DynamicLocation["VertexID$24", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$24"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.1969071488052936, -6.045377501539034}, {
           0.5269883634938364, -6.045377501539034}, {
           0.6920289708381078, -6.045377501539034}, {
           0.6920289708381078, -5.8803368941947625`}, {
           0.6920289708381078, -5.55025567950622}, {
           0.6920289708381078, -5.385215072161949}, {
           0.5269883634938364, -5.385215072161949}, {
           0.1969071488052936, -5.385215072161949}, {
           0.031866541461022246`, -5.385215072161949}, {
           0.031866541461022246`, -5.55025567950622}, {
           0.031866541461022246`, -5.8803368941947625`}, {
           0.031866541461022246`, -6.045377501539034}, {
           0.1969071488052936, -6.045377501539034}}}], "DynamicName", BoxID -> 
          "VertexID$25"], 
         InsetBox[
          FormBox["25", TraditionalForm], 
          DynamicLocation["VertexID$25", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$25"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           8.62763449809494, -8.58082856652282}, {
           8.957715712783484, -8.58082856652282}, {
           9.122756320127754, -8.58082856652282}, {
           9.122756320127754, -8.41578795917855}, {
           9.122756320127754, -8.085706744490006}, {
           9.122756320127754, -7.920666137145735}, {
           8.957715712783484, -7.920666137145735}, {
           8.62763449809494, -7.920666137145735}, {
           8.46259389075067, -7.920666137145735}, {
           8.46259389075067, -8.085706744490006}, {
           8.46259389075067, -8.41578795917855}, {
           8.46259389075067, -8.58082856652282}, {
           8.62763449809494, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$26"], 
         InsetBox[
          FormBox["26", TraditionalForm], 
          DynamicLocation["VertexID$26", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$26"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.8246028238201824`, -5.774939933686808}, {
           4.154684038508725, -5.774939933686808}, {
           4.319724645852996, -5.774939933686808}, {
           4.319724645852996, -5.6098993263425365`}, {
           4.319724645852996, -5.279818111653994}, {
           4.319724645852996, -5.114777504309723}, {
           4.154684038508725, -5.114777504309723}, {
           3.8246028238201824`, -5.114777504309723}, {
           3.6595622164759107`, -5.114777504309723}, {
           3.6595622164759107`, -5.279818111653994}, {
           3.6595622164759107`, -5.6098993263425365`}, {
           3.6595622164759107`, -5.774939933686808}, {
           3.8246028238201824`, -5.774939933686808}}}], "DynamicName", BoxID -> 
          "VertexID$27"], 
         InsetBox[
          FormBox["27", TraditionalForm], 
          DynamicLocation["VertexID$27", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$27"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           9.145905642543726, -8.58082856652282}, {
           9.47598685723227, -8.58082856652282}, {
           9.64102746457654, -8.58082856652282}, {
           9.64102746457654, -8.41578795917855}, {
           9.64102746457654, -8.085706744490006}, {
           9.64102746457654, -7.920666137145735}, {
           9.47598685723227, -7.920666137145735}, {
           9.145905642543726, -7.920666137145735}, {
           8.980865035199455, -7.920666137145735}, {
           8.980865035199455, -8.085706744490006}, {
           8.980865035199455, -8.41578795917855}, {
           8.980865035199455, -8.58082856652282}, {
           9.145905642543726, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$28"], 
         InsetBox[
          FormBox["28", TraditionalForm], 
          DynamicLocation["VertexID$28", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$28"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.5910922091973685`, -8.580828566522822}, {
           6.921173423885911, -8.580828566522822}, {
           7.086214031230182, -8.580828566522822}, {
           7.086214031230182, -8.415787959178552}, {
           7.086214031230182, -8.085706744490007}, {
           7.086214031230182, -7.920666137145737}, {
           6.921173423885911, -7.920666137145737}, {
           6.5910922091973685`, -7.920666137145737}, {
           6.426051601853097, -7.920666137145737}, {
           6.426051601853097, -8.085706744490007}, {
           6.426051601853097, -8.415787959178552}, {
           6.426051601853097, -8.580828566522822}, {
           6.5910922091973685`, -8.580828566522822}}}], "DynamicName", BoxID -> 
          "VertexID$29"], 
         InsetBox[
          FormBox["29", TraditionalForm], 
          DynamicLocation["VertexID$29", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$29"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.963038440932584, -0.5768555492964418}, {
           4.293119655621126, -0.5768555492964418}, {
           4.458160262965397, -0.5768555492964418}, {
           4.458160262965397, -0.4118149419521704}, {
           4.458160262965397, -0.08173372726362763}, {4.458160262965397, 
           0.08330688008064374}, {4.293119655621126, 0.08330688008064374}, {
           3.963038440932584, 0.08330688008064374}, {3.797997833588312, 
           0.08330688008064374}, {3.797997833588312, -0.08173372726362763}, {
           3.797997833588312, -0.4118149419521704}, {
           3.797997833588312, -0.5768555492964418}, {
           3.963038440932584, -0.5768555492964418}}}], "DynamicName", BoxID -> 
          "VertexID$30"], 
         InsetBox[
          FormBox["30", TraditionalForm], 
          DynamicLocation["VertexID$30", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$30"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.4791862073826625`, -3.167965647004682}, {
           6.809267422071205, -3.167965647004682}, {
           6.974308029415476, -3.167965647004682}, {
           6.974308029415476, -3.0029250396604104`}, {
           6.974308029415476, -2.672843824971868}, {
           6.974308029415476, -2.5078032176275964`}, {
           6.809267422071205, -2.5078032176275964`}, {
           6.4791862073826625`, -2.5078032176275964`}, {
           6.314145600038391, -2.5078032176275964`}, {
           6.314145600038391, -2.672843824971868}, {
           6.314145600038391, -3.0029250396604104`}, {
           6.314145600038391, -3.167965647004682}, {
           6.4791862073826625`, -3.167965647004682}}}], "DynamicName", BoxID -> 
          "VertexID$31"], 
         InsetBox[
          FormBox["31", TraditionalForm], 
          DynamicLocation["VertexID$31", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$31"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           9.664176786992511, -8.58082856652282}, {
           9.994258001681056, -8.58082856652282}, {
           10.159298609025326`, -8.58082856652282}, {
           10.159298609025326`, -8.41578795917855}, {
           10.159298609025326`, -8.085706744490006}, {
           10.159298609025326`, -7.920666137145735}, {
           9.994258001681056, -7.920666137145735}, {
           9.664176786992511, -7.920666137145735}, {
           9.499136179648241, -7.920666137145735}, {
           9.499136179648241, -8.085706744490006}, {
           9.499136179648241, -8.41578795917855}, {
           9.499136179648241, -8.58082856652282}, {
           9.664176786992511, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$32"], 
         InsetBox[
          FormBox["32", TraditionalForm], 
          DynamicLocation["VertexID$32", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$32"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           9.719579870856647, -5.428646319714593}, {
           10.04966108554519, -5.428646319714593}, {
           10.214701692889461`, -5.428646319714593}, {
           10.214701692889461`, -5.263605712370322}, {
           10.214701692889461`, -4.93352449768178}, {
           10.214701692889461`, -4.768483890337508}, {
           10.04966108554519, -4.768483890337508}, {
           9.719579870856647, -4.768483890337508}, {
           9.554539263512376, -4.768483890337508}, {
           9.554539263512376, -4.93352449768178}, {
           9.554539263512376, -5.263605712370322}, {
           9.554539263512376, -5.428646319714593}, {
           9.719579870856647, -5.428646319714593}}}], "DynamicName", BoxID -> 
          "VertexID$33"], 
         InsetBox[
          FormBox["33", TraditionalForm], 
          DynamicLocation["VertexID$33", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$33"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           10.182447931441297`, -8.58082856652282}, {
           10.512529146129841`, -8.58082856652282}, {
           10.677569753474112`, -8.58082856652282}, {
           10.677569753474112`, -8.41578795917855}, {
           10.677569753474112`, -8.085706744490006}, {
           10.677569753474112`, -7.920666137145735}, {
           10.512529146129841`, -7.920666137145735}, {
           10.182447931441297`, -7.920666137145735}, {
           10.017407324097027`, -7.920666137145735}, {
           10.017407324097027`, -8.085706744490006}, {
           10.017407324097027`, -8.41578795917855}, {
           10.017407324097027`, -8.58082856652282}, {
           10.182447931441297`, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$34"], 
         InsetBox[
          FormBox["34", TraditionalForm], 
          DynamicLocation["VertexID$34", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$34"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.07282153947815, -8.580828421440687}, {
           4.402902754166693, -8.580828421440687}, {
           4.567943361510964, -8.580828421440687}, {
           4.567943361510964, -8.415787814096417}, {
           4.567943361510964, -8.085706599407873}, {
           4.567943361510964, -7.9206659920636024`}, {
           4.402902754166693, -7.9206659920636024`}, {
           4.07282153947815, -7.9206659920636024`}, {
           3.907780932133879, -7.9206659920636024`}, {
           3.907780932133879, -8.085706599407873}, {
           3.907780932133879, -8.415787814096417}, {
           3.907780932133879, -8.580828421440687}, {
           4.07282153947815, -8.580828421440687}}}], "DynamicName", BoxID -> 
          "VertexID$35"], 
         InsetBox[
          FormBox["35", TraditionalForm], 
          DynamicLocation["VertexID$35", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$35"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.08173372726362763, -5.504687374829551}, {
           0.4118149419521704, -5.504687374829551}, {
           0.5768555492964418, -5.504687374829551}, {
           0.5768555492964418, -5.33964676748528}, {
           0.5768555492964418, -5.0095655527967375`}, {
           0.5768555492964418, -4.844524945452466}, {
           0.4118149419521704, -4.844524945452466}, {
           0.08173372726362763, -4.844524945452466}, {-0.08330688008064374, \
-4.844524945452466}, {-0.08330688008064374, -5.0095655527967375`}, \
{-0.08330688008064374, -5.33964676748528}, {-0.08330688008064374, \
-5.504687374829551}, {0.08173372726362763, -5.504687374829551}}}], 
          "DynamicName", BoxID -> "VertexID$36"], 
         InsetBox[
          FormBox["36", TraditionalForm], 
          DynamicLocation["VertexID$36", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$36"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           6.054072020803765, -8.087279751889252}, {
           6.384153235492307, -8.087279751889252}, {
           6.549193842836578, -8.087279751889252}, {
           6.549193842836578, -7.922239144544981}, {
           6.549193842836578, -7.592157929856438}, {
           6.549193842836578, -7.427117322512167}, {
           6.384153235492307, -7.427117322512167}, {
           6.054072020803765, -7.427117322512167}, {
           5.889031413459493, -7.427117322512167}, {
           5.889031413459493, -7.592157929856438}, {
           5.889031413459493, -7.922239144544981}, {
           5.889031413459493, -8.087279751889252}, {
           6.054072020803765, -8.087279751889252}}}], "DynamicName", BoxID -> 
          "VertexID$37"], 
         InsetBox[
          FormBox["37", TraditionalForm], 
          DynamicLocation["VertexID$37", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$37"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           10.700719075890083`, -8.58082856652282}, {
           11.030800290578627`, -8.58082856652282}, {
           11.195840897922897`, -8.58082856652282}, {
           11.195840897922897`, -8.41578795917855}, {
           11.195840897922897`, -8.085706744490006}, {
           11.195840897922897`, -7.920666137145735}, {
           11.030800290578627`, -7.920666137145735}, {
           10.700719075890083`, -7.920666137145735}, {
           10.535678468545813`, -7.920666137145735}, {
           10.535678468545813`, -8.085706744490006}, {
           10.535678468545813`, -8.41578795917855}, {
           10.535678468545813`, -8.58082856652282}, {
           10.700719075890083`, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$38"], 
         InsetBox[
          FormBox["38", TraditionalForm], 
          DynamicLocation["VertexID$38", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$38"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.814367358459575, -6.438484356728294}, {
           4.144448573148118, -6.438484356728294}, {
           4.309489180492389, -6.438484356728294}, {
           4.309489180492389, -6.273443749384023}, {
           4.309489180492389, -5.94336253469548}, {
           4.309489180492389, -5.778321927351209}, {
           4.144448573148118, -5.778321927351209}, {
           3.814367358459575, -5.778321927351209}, {
           3.6493267511153036`, -5.778321927351209}, {
           3.6493267511153036`, -5.94336253469548}, {
           3.6493267511153036`, -6.273443749384023}, {
           3.6493267511153036`, -6.438484356728294}, {
           3.814367358459575, -6.438484356728294}}}], "DynamicName", BoxID -> 
          "VertexID$39"], 
         InsetBox[
          FormBox["39", TraditionalForm], 
          DynamicLocation["VertexID$39", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$39"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           11.218990220338869`, -8.58082856652282}, {
           11.549071435027413`, -8.58082856652282}, {
           11.714112042371683`, -8.58082856652282}, {
           11.714112042371683`, -8.41578795917855}, {
           11.714112042371683`, -8.085706744490006}, {
           11.714112042371683`, -7.920666137145735}, {
           11.549071435027413`, -7.920666137145735}, {
           11.218990220338869`, -7.920666137145735}, {
           11.053949612994598`, -7.920666137145735}, {
           11.053949612994598`, -8.085706744490006}, {
           11.053949612994598`, -8.41578795917855}, {
           11.053949612994598`, -8.58082856652282}, {
           11.218990220338869`, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$40"], 
         InsetBox[
          FormBox["40", TraditionalForm], 
          DynamicLocation["VertexID$40", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$40"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.109363353646155, -8.58082856652282}, {
           7.4394445683346975`, -8.58082856652282}, {
           7.604485175678969, -8.58082856652282}, {
           7.604485175678969, -8.41578795917855}, {
           7.604485175678969, -8.085706744490006}, {
           7.604485175678969, -7.920666137145735}, {
           7.4394445683346975`, -7.920666137145735}, {
           7.109363353646155, -7.920666137145735}, {
           6.944322746301884, -7.920666137145735}, {
           6.944322746301884, -8.085706744490006}, {
           6.944322746301884, -8.41578795917855}, {
           6.944322746301884, -8.58082856652282}, {
           7.109363353646155, -8.58082856652282}}}], "DynamicName", BoxID -> 
          "VertexID$41"], 
         InsetBox[
          FormBox["41", TraditionalForm], 
          DynamicLocation["VertexID$41", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$41"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.591092683926937, -8.580828566522822}, {
           4.921173898615479, -8.580828566522822}, {
           5.0862145059597506`, -8.580828566522822}, {
           5.0862145059597506`, -8.415787959178552}, {
           5.0862145059597506`, -8.085706744490007}, {
           5.0862145059597506`, -7.920666137145737}, {
           4.921173898615479, -7.920666137145737}, {
           4.591092683926937, -7.920666137145737}, {
           4.426052076582666, -7.920666137145737}, {
           4.426052076582666, -8.085706744490007}, {
           4.426052076582666, -8.415787959178552}, {
           4.426052076582666, -8.580828566522822}, {
           4.591092683926937, -8.580828566522822}}}], "DynamicName", BoxID -> 
          "VertexID$42"], 
         InsetBox[
          FormBox["42", TraditionalForm], 
          DynamicLocation["VertexID$42", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$42"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           4.741209041310491, -1.5352304755193846`}, {
           5.071290255999033, -1.5352304755193846`}, {
           5.236330863343304, -1.5352304755193846`}, {
           5.236330863343304, -1.3701898681751132`}, {
           5.236330863343304, -1.0401086534865704`}, {
           5.236330863343304, -0.875068046142299}, {
           5.071290255999033, -0.875068046142299}, {
           4.741209041310491, -0.875068046142299}, {
           4.576168433966219, -0.875068046142299}, {
           4.576168433966219, -1.0401086534865704`}, {
           4.576168433966219, -1.3701898681751132`}, {
           4.576168433966219, -1.5352304755193846`}, {
           4.741209041310491, -1.5352304755193846`}}}], "DynamicName", BoxID -> 
          "VertexID$43"], 
         InsetBox[
          FormBox["43", TraditionalForm], 
          DynamicLocation["VertexID$43", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$43"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.08173372726362801, -9.074377381156387}, {
           0.4118149419521707, -9.074377381156387}, {
           0.5768555492964421, -9.074377381156387}, {
           0.5768555492964421, -8.909336773812116}, {
           0.5768555492964421, -8.579255559123572}, {
           0.5768555492964421, -8.414214951779302}, {
           0.4118149419521707, -8.414214951779302}, {
           0.08173372726362801, -8.414214951779302}, {-0.08330688008064335, \
-8.414214951779302}, {-0.08330688008064335, -8.579255559123572}, \
{-0.08330688008064335, -8.909336773812116}, {-0.08330688008064335, \
-9.074377381156387}, {0.08173372726362801, -9.074377381156387}}}], 
          "DynamicName", BoxID -> "VertexID$44"], 
         InsetBox[
          FormBox["44", TraditionalForm], 
          DynamicLocation["VertexID$44", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$44"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.066305092716173, -3.02553834992664}, {
           7.396386307404716, -3.02553834992664}, {
           7.561426914748987, -3.02553834992664}, {
           7.561426914748987, -2.8604977425823686`}, {
           7.561426914748987, -2.530416527893826}, {
           7.561426914748987, -2.3653759205495546`}, {
           7.396386307404716, -2.3653759205495546`}, {
           7.066305092716173, -2.3653759205495546`}, {
           6.901264485371902, -2.3653759205495546`}, {
           6.901264485371902, -2.530416527893826}, {
           6.901264485371902, -2.8604977425823686`}, {
           6.901264485371902, -3.02553834992664}, {
           7.066305092716173, -3.02553834992664}}}], "DynamicName", BoxID -> 
          "VertexID$45"], 
         InsetBox[
          FormBox["45", TraditionalForm], 
          DynamicLocation["VertexID$45", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$45"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           3.9669096064383034`, -9.074377381156387}, {
           4.296990821126846, -9.074377381156387}, {
           4.462031428471117, -9.074377381156387}, {
           4.462031428471117, -8.909336773812116}, {
           4.462031428471117, -8.579255559123572}, {
           4.462031428471117, -8.414214951779302}, {
           4.296990821126846, -8.414214951779302}, {
           3.9669096064383034`, -8.414214951779302}, {
           3.8018689990940318`, -8.414214951779302}, {
           3.8018689990940318`, -8.579255559123572}, {
           3.8018689990940318`, -8.909336773812116}, {
           3.8018689990940318`, -9.074377381156387}, {
           3.9669096064383034`, -9.074377381156387}}}], "DynamicName", BoxID -> 
          "VertexID$46"], 
         InsetBox[
          FormBox["46", TraditionalForm], 
          DynamicLocation["VertexID$46", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$46"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           10.203629107313517`, -4.307858066428533}, {
           10.533710322002062`, -4.307858066428533}, {
           10.698750929346332`, -4.307858066428533}, {
           10.698750929346332`, -4.142817459084262}, {
           10.698750929346332`, -3.81273624439572}, {
           10.698750929346332`, -3.647695637051448}, {
           10.533710322002062`, -3.647695637051448}, {
           10.203629107313517`, -3.647695637051448}, {
           10.038588499969247`, -3.647695637051448}, {
           10.038588499969247`, -3.81273624439572}, {
           10.038588499969247`, -4.142817459084262}, {
           10.038588499969247`, -4.307858066428533}, {
           10.203629107313517`, -4.307858066428533}}}], "DynamicName", BoxID -> 
          "VertexID$47"], 
         InsetBox[
          FormBox["47", TraditionalForm], 
          DynamicLocation["VertexID$47", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$47"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           11.243712695571855`, -6.049389619821914}, {
           11.573793910260399`, -6.049389619821914}, {
           11.73883451760467, -6.049389619821914}, {
           11.73883451760467, -5.884349012477643}, {
           11.73883451760467, -5.554267797789101}, {
           11.73883451760467, -5.38922719044483}, {
           11.573793910260399`, -5.38922719044483}, {
           11.243712695571855`, -5.38922719044483}, {
           11.078672088227584`, -5.38922719044483}, {
           11.078672088227584`, -5.554267797789101}, {
           11.078672088227584`, -5.884349012477643}, {
           11.078672088227584`, -6.049389619821914}, {
           11.243712695571855`, -6.049389619821914}}}], "DynamicName", BoxID -> 
          "VertexID$48"], 
         InsetBox[
          FormBox["48", TraditionalForm], 
          DynamicLocation["VertexID$48", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$48"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.08173372726362763, -8.58082842110505}, {
           0.4118149419521704, -8.58082842110505}, {
           0.5768555492964418, -8.58082842110505}, {
           0.5768555492964418, -8.41578781376078}, {
           0.5768555492964418, -8.085706599072235}, {
           0.5768555492964418, -7.920665991727965}, {
           0.4118149419521704, -7.920665991727965}, {
           0.08173372726362763, -7.920665991727965}, {-0.08330688008064374, \
-7.920665991727965}, {-0.08330688008064374, -8.085706599072235}, \
{-0.08330688008064374, -8.41578781376078}, {-0.08330688008064374, \
-8.58082842110505}, {0.08173372726362763, -8.58082842110505}}}], 
          "DynamicName", BoxID -> "VertexID$49"], 
         InsetBox[
          FormBox["49", TraditionalForm], 
          DynamicLocation["VertexID$49", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$49"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           7.852085485612979, -9.074377381156387}, {
           8.182166700301522, -9.074377381156387}, {
           8.347207307645792, -9.074377381156387}, {
           8.347207307645792, -8.909336773812116}, {
           8.347207307645792, -8.579255559123572}, {
           8.347207307645792, -8.414214951779302}, {
           8.182166700301522, -8.414214951779302}, {
           7.852085485612979, -8.414214951779302}, {
           7.687044878268708, -8.414214951779302}, {
           7.687044878268708, -8.579255559123572}, {
           7.687044878268708, -8.909336773812116}, {
           7.687044878268708, -9.074377381156387}, {
           7.852085485612979, -9.074377381156387}}}], "DynamicName", BoxID -> 
          "VertexID$50"], 
         InsetBox[
          FormBox["50", TraditionalForm], 
          DynamicLocation["VertexID$50", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$50"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{8.760693309010094, 
       610.2393066909899}, {-236.2393066909899, 231.2393066909899}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{620., Automatic}]], "Input",
 CellChangeTimes->{{3.643029679269967*^9, 
  3.643029679563798*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvQe8VsXxPzy5vQOioqICioA1aqKiYqXEEo1JjMaSHk2MibFFo6LGFjX2
aOyFGFCsWABBekcEpEuHS7mXXi5d0Pz3u2dnnznnzDnP84Amb96fn4/P9fLc
LbOzs7OzU8/5xfW/vewPv7j+il/9ouV3rv3F1b+94lfXtezyx2vNV4XfICr4
PdE3lrYk/P5vIv7xb/Nf8OMq/MDX/7NfNMX/CuiLz7dRIX2xYxNt3zDPfOZQ
if1ZTp+tn0FbV4+nLStH0ZYVw+3/P2uYSZ9/tta032x79sIghW6Q7ZtqbVd8
iuUgaybR1lVjzQCjacvyobRt7ZTkQT7/bH14kAI7RklmBAPK1lUf0fbNS+nz
7RvsCgYHS2pk/1eEr2njkndp1cRrqX7o2XtQ3eDOZuhVE66hzcsG2UY97c9C
M+IYWjvtLlo2/DzidsvH/Iw2LOhOO7bU+XbbN8yn9XOeomUjL/Ttlg07h9bN
eszA9ykNCCCocc23rplohvm5bbi3n/6PtH1jrW3R3bXbYRaxZsqtoXbLR19M
m5b2CbUDbhrmPmun5Hb1Q79LDfNetKvtH0xfzdBuWmIgvcA2bO6arzDgYEVo
8S/XDgjCX/HZx7WrG3Km2aFJoXbABrfj8TC1oyj6IDz9ull/9833VZr/07Xb
XN8/1m7V+N/b1cp2OzbX07IRPwy1w4ZhU8T0Va75Zw1z/LD7iea8eh52+ehL
Y+0AEoPZzbXDvkfbrZ3+V9+ub3h6kBg3398132IIlpu/xHtqzlzd4C6hdg3z
XohNLzeJp1/x0eVJ029Y2CM2PQ5DdPrPGmbH2q2e3DU2PcgxOn39sHOTppd7
z8OuN5QbnX7LihGxdnJVHkuGFhhLLVy7HVtX+nZ9otM/HhsW38WmXz4k1g5n
Oz79dt8uM/3yxOlnPhpf/ewn49MrNLJ81MUJq49Mv6X+f2D6CvuzyPzsRB9f
04gOu+QEWjC4c4H+dUWOwFb4n6HuVDfodBp89T509D7l1Kp5JZ1w3uE0/kM/
bLa1ldmfVVQ34BTqfnFTarN3BbXcp5rOuuwYmjkwGH7QH/aiw/cup5bNq+mc
K9rT7EGdK/+/g5LKGErmv9iKDmnVkt5+rxPVfXgSPdmhkk7uejItNn8rzxMv
Mx5oRvu3akW9e3eiJb2PoxsPrqTzHzqVFnZvQ0e12Jd69DLfv/dtuqJVNV3b
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
/k67X5QtlOvi+fF2T9pCRTeH76JbuEIInJobhd9C8120ndTh7ZY23qLIKWcp
e+uqcTE8a8dV3qOZ/XgjFUcakNz3821rfLvLGedDMu+pH/C8TjrPEb9S95mG
3y2CpNPwK+/5NPzKx1QIv/Aoywm/5gbZWfxKIPPFryS0r/H7X8NvorfJgFPo
Xxc1pXYtqqhdq93o5zd3SLJladtR6trVDT6d+p9VRsUFBUakg9mpzPwspoPN
NPP9ilWnkGw7GRioSqjuw1PonwbSNnuWU8t9Kun48w6nsf06V+e40Txd3QfH
02UHNKKHenaiAvfdzIebUstvfYs+HRyYK1WCCAbIONa0bQ47WhV1vOQomvxh
5ySHmyYMfsTLwGErQFZhCFlsAM1GetqSAjtIogdONirNaT91kilUCLxSh6ZA
AbxC2UftLOQEoe7jVJ1jV8X7KqeuOoE2sl3LEugmlRAYT/LclzE96WSY4IFV
k414ddgbJ3ENHcG8h7vIk+Y+sy+1adeWRvbvTIvePoou2r+GbvlXx1x5UplD
Qe0rB9NpzXejrs+cDqIsSj8Z2dhQhR+7E029Zw9qeUQ7GvZBZ+uP9o+TKuiY
q0+C/wWzj11hRwteakWHtG5t15/IjgImEfhmTb9/T2rRtjUN7Gtk4b7H051H
lNMpXU+mqQm+bgYbjcVyJO4jSOPp/wusKGEb2aqbQCT/IS6UBbha3ZmwJq1X
aaqbY8CAqqNd/cWaQpKub2UqqcyPjFussJ6Mg17yOIv1y97BkE6uk5LX0CiB
VSQgOk9GlN2dsj3N6nsSjXqtIy2xfTrSsEu9z5XmtZnMmAL8zXz8QDp5n8b0
O3apTJl6rpAJcmdTHWnIj6vom1dkPOkm396YWp18LM3+cthUXe9j6Lz9GtMj
r3XKjU3NfvEoeumZ0xyNmI28roZanX4sfay6llo4q/neSkVPDJ3s1JQb26oM
LS/XnciNfyXstvksTiYoj2LJxcpyQoVrn1lPfhwtCdyQuypF/Hw9c9L7dqRR
ya7IWfumEDF56kghrjnxcYsSeVsKnXY4lC5LxnpVVjL/NvXOdhzTGNBxNCJ5
A5gk82V3KQ7VEAj/9dM96LC9y6j1ofvQDb+poQM7HWfQ6WerHf8Ivdlvlv1U
2p+FRnzOmChYvJv/8qH0o5ZVdOGtYOWJUzKhTh33lh+2iRt25IDnFA6Hm2Qv
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
lmMzJGD77yfGOsZNiOcwK5u0p6Rt3Fx0/LbH+XSK5t6U1jn7c2/R8VuCIFlX
7ulq5AVetZXYUaYc01JX2p97KR2l0YM7xo651lGq9H0mRJGuL7GjNNF4m4GR
c0Mdm0U7tnItWX+aQ0uh5//PtaxiQSsa+KNnFanMc+BIfHaWbAcVuzh6esjx
ro6eHhyY7+gKyvWYm9xR7l0RlVCKQGpSXeJ3YgLFARp/SfBmzZdoKiKOmZ2T
/NNyH/i/e8h2puXiLC0pbGPxhuLNS7J31NNYnxm+nFXuqyRQlga9xI64kKMd
cSln7agV3ZS1QWM3DN9pWrFQ6J9DM2odbZHTeS/atzhLLmum/gWaoEzHfUTH
Y11HSC5Q3NQPPTtTnNWIQBBAkK83dm9bsS5I919pnSKQcBFeNrjon3z8Xvr7
o/fSrAk9reyD75GfFAsvti4yhVwUItg3DNZSjB7IRUW0uL4hJq4cFmtXSCMn
LLFtLrulf/CHw5VGr77/qW10/zMfJTe6+x9jbKP3Bs5JbnTFbQNso/FTl8Ub
neRgX7Jsg4d9+apNCe0KacwndbbNVXcOCv5whNLo9b4zbaP7nh6b3OiuJ0bb
Rmic2Og3XfvbRpg21qiDg33Zyo0edrOOhHaFtGDxujDs3xSNjmDaapgVqP3n
PE2BtS8wsEGMxafY/qykFVPuo8kDu9K8MXfab6Dkgmhp3XPMEwOpU1EF1lNM
22Cy8Xzcti43stlbdoYCP89D9uDjU4qfBbTy49+ZFa4cd5mVveD0ZJqy+hVl
ClhAYlnYiqYTrglJ9ZDI7LngQ+WE6HEMy5Y6CwEOojQr4zEDQ2JHPunwbnC5
q/2Bjb7DDgzG/sj1wbsGxQFkH5xVGOzQ4lRxpqO2YGlbtj8PCI8tRVQtW/4p
rt3Kj6+MPcpkynQ59ljXZ7MoGKulMWcKhaIx9lI0fUNwtwqPLZ1ttFzmPDb8
omLPV2Fw1MaWNnBN+g4SbZfYBwU/3qyCdMptgCHIE9vEFuiwulLT1epIoSuF
3nR4oJvFFrIuFkpSmC4CTf4L1i4Msm/uQEJNn+gypJ+OtgzMG+0jE05znQjY
jNkQGTWyogXXQZF2bh5v7fR7k2HQnhWclRr0xS/n5sqCmqVMKn3EkicV4gtP
isMeJXYcUj7YaZOuMZub16Sc7hxcipULWi3qPb+KSbUc9bKd5rvg45XSU1Om
wuSTRaQkL01JA6stRcv1Lr31kpeSnumuKpf1BIClp6KbpWcIVB9ZvCgtK7r0
1NUWJVOupWS6ymNd6enSZmbPRKctDQbNGMcVXD99aamJcHJaWo0bMWRLyJ5l
Sl3K9Ht2cimldilJCTdyOkpVfJRiNovUnDW7sp7dHLf87LPPadrslTRw1EL6
aMAjVX5JySVn8+AOSdH4p6VlysjENK6bn/e6Kty1PX/ROho9cSn1GTKPerw7
g555dRLd8vAIK95ffE3vQpd2pdtTGZmIOUlKHdncOAlzxqTg2oRIeyanh57s
Rb/6cz/qasB9rNt46vXhbBo3pZ6WT7qTEnU0OhPmarMSQ//G2w7bXmKfMZ9M
X07vDJhDj7w0nm55aDjeEBUOOT+/4QO64f6hNKDXfW7TSyghADHvG0ON9ksP
8f3z3T38w4X3r2/3jKyqZl7MYj8tdwiaOfZJevzlCXTj34aZZfctt8OX0yXX
9raPKiAGCHrjg1n2cTVr/hpavW6LRSOXm8l2qW/FT1tsstyWJy215xZl+vCB
ZAZBCU4ukAZdebxAYii2jgZC7rTG90Z+S7pYARS+/ZCVIfMa4e/pjOBQSlsb
FtDsBWtoyNhF9FqfmfS35z6yW9vvld9TklYxzRTMR3Rk3wcje1JmEPYh/em+
ofYt/nKv6ZZ+h49bTBMNpW3a/FlFjvjaxPLNskHW7gUZd3chyeE7yD7OrsS+
dtJPTxNxn8wmT0kOo2XU4qTPEQM2250XfvKMTaPywbD59LE5tWbFmVJwWZa8
wbXD645fYVx+Dbsb8XJtKpYMApCyrrTbPbGrS84kkYjb1H24dpbLUltvg2sn
a6dpNdaqw+uVVkNuLp2A81qvD9ROUE4nmPe/jGXLICDNodtFVWhOu/y6kO+j
PztewWVu2GwHtWTUdId+eIO50jZ5IytB0Z5w46Uia2H3GLKgmeR2XKYNDJLL
KO4nNp2rn0WQpYWWYPE87A2e9FYE+yDcf/F7ILV38TWAZDRO8rFRLAT6XZeG
kWwKAMaIZuePFyfzGNFiluR+X8+I3r6BVn9yY+h01Q09I45NUd+sSMFImhSd
TVXDS9TiseLFvzLRbVq0nHg/8hJlZAYHd4LfcLt8l6NptWQdL16ODMtKjnL1
y+EIAtlcBk9ex9T4xQ5vi+Ciezj8+S6H1RMyTIn50sJBF9Cojz4N8y9RszdT
LOqRpOVki7Xl5aDKWnR6hLtycIIvBiviUvNdoqY//ev9j+BpYKXh9CVG62Hl
vURZF8/XjjVY53asr0OEVdpyvBZr4at+Ofs4Vr9m+v1W1GPxDCYSI4ys+2pX
Bkg0TrHcaShZqQ29KbPuEr95f1VWm3G+4JCNuNK+OKy0N5+Xe00zYksglt7z
5BgrreP7NcryEwsZ6b4GFflhK9f6N0qhHy35mEd0gop245L3rDDIlgnIvnA9
wuOCy0bWT308vpkiij6wIpbSNnNK8L31up/7nL2FsGpYXmyQdSCvFJmfT1sT
DnyUzOulyBEx5GCcKGwDDFjLV22iafgb1xKHjnr7hjn2U4yfBdaCWGJjkres
HGXus+GWg8MKaS4m268kcQsrI1uY7tVRnt8+ptbnKKUZyYVR1CRNyftYZrmY
bWcYO67ozQYLGxa+Ypnr2ml3Flhp0nCHybfY+EN4axeYO/sGIwQFBrEbzL/+
lPn/J9fb79dMudVs3QPWsxA38Befby13UPQbtoC6vxCI1VyxUla7bO92tN/w
+fSzP/W1O4r3Y/2KjfSJGwPOVQ1G7IJ8mQnpPMNKcziyhcq+ZS+TcSz1Sfad
2aktTC5IMCO5akSee1hk9zBTv/1CH4WN6t0GSUBWsbu6oEV42zySgdRb73qq
hcAdG3FOcPgf8fES+tVN/WzTP9wxkBbVNdAEz3pf8WLAXo4tWlHWIAcpJKwk
YnCfqZ+RlJM71aMoT5yzCiqSiFxW8hGJ7PPDcqEPRsG/+KUMjseyQYG7YPAS
//1fBvrL8NFuE2jZR1dqMfknOlRPn7OKfnvrh7b5lbcPsPbwj/n+VgqPsxMH
UOwdkhJSHCe4VOV5s2hZrFPSdOeK28Sc27pBp9yTa2frYpLBSaV/lcM19Yl/
TTSXQYB+4BXaWUxuS0EbMmUxTIYgn+T2ArjHHnDfyTNXeLO2LPMc9cTBXlQ6
WLTEuAmeZ5TnRmTL2Txbz2Cc6/WetCEJ9araOQGwftzV9Je/j/I0D12cYTXM
huHMw+xib4/7i33M1CkO92AxYDUYAqwHLIjtzpq0B/s2s3h5LUfzRSY45e0c
7suTE2eKPKzVeSE8qhFNr6+TEfPizm8PPtbNki9eFiy9QPgFmhAut6dH/0X2
voDe63SHftywuGmBfty80CuO4eeB4hkBNSmjnxlELE+e7ra4k1SfnHRQzTCZ
H9XHNyGtMkg73oSZb1jEYdRydwVAVwHaxsMcSIZQvGFh9wI7aaCHwm/4f2Aw
KbVN0BSgIrEFhCb2bevi9gcy7e2PjbT7A1kXMi/fOjYo2nktQQoKgj/P59jP
QJ3VJUMy1lko+L3A/lbusNEl+Jv5BLGgXa0oDu+RHZsX0+sOe5r6I7eCzinP
vNLQRlmvPkbkihEUZN8KNhMMBZqVAouzMmvkxr/xr+Dzhm3nsGhl+Z/kvPHp
1Tt446FhYVgvd6+Y9Ru20fOvT/F8EPYIXOC4NEIqP3OB4+Lp6WCCA09M3pgS
V6Ll+WreMO8lu3vYVT741pbhHmAXKyjxgquqpE6tO+BRI91af+vm6Nk7cJt8
8clb/d0JCuP79xXXTmNqQ17XqS0PVNQPyagVff4E87D/3GkpfpyIiiQVdGIa
84N5+InXewivcMOPGTWYlgw6IyRBSJfcHowFAS4v4YPuv9tlLLh/y4tYBnpd
mCISxNTNugmVVy+tELx6TdtnM+y4+Oy01c8d2TWf1S8bHj9RcvWsHJKavQuU
1Z+kLIdJWssVtaG2p2/XXVlOosSru0fxDbbGnKh89l5E+rDSb6UIEdJW2oY3
JKY8KgmV9VVijjXkaBF+cMfNjpz4PZzmcFXux743Np+0cEUwJD1UGUMyf5eG
obb2Z0wtw/GwWoC0hhnNmCI1srljJr02oS/sOTduClAsG5wzyWaSqOtvHZy1
6h/FymnyEcgiZ1J9hj5sfp4h4XMvc9j9KBHZxaQpUNJqeGoYh99rFAPwj80f
4+kV1XxxzUVvxuZTzGU+H9H2DVZ6gTYhIyVkMHmQ+05mY9RQFrDe8niBO8tf
QjHvPhZdQ5fm5rlChLjkztcSndWYr8HQHHVjhazK13JVGFMIQuEZT2UOvmxg
HCvC0nuIaydVF2nR+V8WRtKt/Yk+bzLNPadDY8zg3zylwwynH9PURDIt1oFM
Q8JGydiSVuC2Duq0Eja2rZ5r4MtFnlOfKtb/NMc5WcsEpgik2PLBBeZ3qEox
YzTd4ba1XknBTgrBUygMusSgdWIvdBYGiAPwtgo8rrL7XbVzE0sLdYD+0pxq
c2j5F7Lh37vcxC75wtAlX6XsU1f7s9hdEH2DeG2XAMgXcDPSHHAMWwBu+y0r
RvnDq7GLmFCp+/xVuOE5LTIuj+DC75KRYw0oCIDH32vCWxu/cYuofuhZtGby
zfYtZB7KwYJLYvzLIUnDUblCEIGZvsiydOAdrlTLR13YlO9HAy+4PCbesnL0
QUx6hiqYC7Zl+ldVHTklxMhGBFyDIiLHNFL2/BaBQX5QaOnnKpU9ZhOTzGWN
D/IsgzaAG4P53fyGnB2QzuRbgNIm4S2Mu2cUheyIfgvLYtJjZJlVyraxRx+S
FLErhL+JzZ7h3tm+aRG1du2kO1WHvLCuCzQ1CupvVsbw6avNMUNCR7SoSER9
OI04m4C+2LHVkqf71GQyuKWkjC4KZRr3yC6Pv2OU1VUqGPcOhRtrPdflewuE
xZFiB7h2mt8e9JnRFWfbBS52HJGRqpUNuIlB3LTE58HdV4DIocJs6t7x+Rd+
E1ooG3BYGMmwbEeRLH2vPJK1KquJtZU1HGupT6BO53aMY2R3Y8WeV9MbhLCz
RIsccczULCWuNARrkdFSE8iUC/0nglLh8btk0Hda5oDjmEqyKOQFlYDjImUB
GoL5MRkkD4kqxy+wRnW0OJD5vLsV8LTaw7ED6GfhQQUVpk1MagT6ljkimsMI
0oQ17SZnxGsJQWTYKNtv4LwPl3UYBdjTxWxAKrvJfyd8VFSCe2zaKrW7mHdH
K9DAlid82rgbLFA4bw7C0M0dhTsPj4tF09+zDlt33/e4kdUmObcR+JEEXiUc
fs6OYdl8ctN2Mk3uS9tJ9sjK7GRJOCeM+SDM/K4nRnM8A2zU3d6aahszwbGb
VJ4buGXrdlo67IcyrC3ZZVdfHG/gsvnDvAMVb6DMCq35PB7m2iHiAGsDf2iU
shnSkzl5MxILuGms7M/+mloWwxLMZFgSPOSuunNQgP9iuuPx0TTmk6XWZuBO
gN8HSZ4p+yDNYmpcZJpSsYgmD7mPfn1z4OExu9+5iZlH0uqxldILL77kg/eR
VwA2D5AauDWL/ppyTgYm8g4i6AVjIRZJy4zvVZ8z7k/dQe2ZyVsEOY7btXA7
/csbP/A2G86PsLi+gU+0FrotfZIPT94i73WUEh00J1m9yUFDU4fd74Gb0/9c
ppNnn32RfnJdHxETU2Itg9gLxN3AQgiHhoaN28r9VsTrP0g/T94KhNRgQGwJ
bwW4a6yvkAvz34rayFYU2bAoHGD4kNav2Mg27HWiqkymGEHGjzrHLdADjb5N
HybrUXkLVk5/nCZ/usKeV3NWW7qxgROQOkgepA+0A/3YhiKxJdfcM5gefvFj
mxEEgXCGI+TqScxbcu1fB9sBkabE13lYFlezy3fRrm+JubzWb6Vt2wJRptSf
yvfiooMo0pCyH+wqkIlqOoHeT9aqMv4j0gIfAXnjFzpxEfsxbnK9FRZxlBGJ
WSz24vp7h9i96D14rt2LlZPvapmCd4TmoTOy2TFH+3TeaisOTXnvRxmVsnnC
c4qcK3YV7/ysU/PLiRILRyQjOlOCORpLlRxEXJE7tssctvHuWVzXYJnNvU9J
bIeDJvnpFfF9rlYwvz9fp1uX25eKzMWCuEToevAptj/LDIO+imqH/ZwWDPmF
TVaMHMGBGupG9Cp0aVlkzrqAVorsebzUbfDjTzypOYPzXqqVqLLsZdYrWv/e
nhFWqkDo5PG0oLsUEkivLN4xXQmdExUEWtQSm2MJoZfwhkf2IwgWZvcb5b7p
+3r0ZcokNGNRzNy2MNkx1eOE/+3ZcfwYeej5j+1X8Er3T3RDGaxF+B2fRlEy
xu+gKM+l7WAuN/iU5Lhfi0qviFw5xh9mHzE64ofUYNCAJ8SR2XYyuZpzdo14
ZDuHncPbKWVplrnrJ2bqFvk8Come0+1ligi5p5xp5rOGOdbbEi04agRcbMnc
kTbiGdsINtt78DwOcgbjwymUVTpk1Yrf+9MRD/ACqeS6p0mxx58kxyRbhFQ7
9gc4YX3Bw3lV4HVFrNPE7/CvQIqYz7etOjo3UV4NWE9TjId3dvmYn2vvCF8A
LBZKWErJ/tmZtBLatmJtYc5kTvroX9PN9weOzANGLQyUNxWuasdbQemAmY+I
vPLft6pfW2VwyJkF+EeB1aNBJXwmsUeaaVdgTQ0lNmuVTF/fMO95eJ1fxZfG
5voYQWDWNIJglXgk0rpA/9qi7eLkzdQUHGa93ttePB2aKrvi35+6S7e2Ifsw
g1OSYy2a8qLV4KDFw64dKgFE20kLtYajZHGCzYzx7yt3AlPrZj3OmJL5sTRM
BSynWHW4TkNTtjxfjCaZQdGbEA3/5t27SUFT+pXbKen7ncHUlhXDGVPStSYN
U5p7tK8ZP/NFmrNwLW3est1jKlvWMsaUNbS6m01LgnVzCqaSrrSE73PDVHEI
U8EJvCmzBHOpsLJrdwVdXlYNuzNXO7hHuFwUeHvDYxr6Cn5MmIcdB+tmy5X2
sEfKIqsTRgtWvNcOPIfWzn/LtrgljcxSCqor32vIi6sESmLIsxf46EszCdAz
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\
\>"]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Inherited\\)\[NoBreak] in \
\[NoBreak]\\!\\(Inherited[\\\"State\\\"]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6430296790501347`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.643029481840375*^9, 3.643029488478763*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.643028524149805*^9, 3.643028525619315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "&"}], ",", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "7"}], "]"}], " ", "&"}], ",", 
       RowBox[{"Range", "[", "100", "]"}]}], "]"}], ",", "6"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.643029800144788*^9, 3.643029836861826*^9}, {
  3.643029866867906*^9, 3.6430298756822844`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "13", ",", "20", ",", "27", ",", "34", ",", "41", ",", "48", ",", 
   "55", ",", "62", ",", "69", ",", "76", ",", "83", ",", "90", ",", "97"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.64302982244378*^9, 3.6430298373130817`*^9}, 
   3.643029877206256*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.643029906092175*^9, 3.6430299137072277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.6430299144631042`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "\[Equal]", "0"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.643029920520982*^9, 3.6430299610192947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.643029962005993*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "7"}], "]"}], ",", 
   RowBox[{
    RowBox[{"#1", "\[GreaterEqual]", "#2"}], " ", "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6430299872287807`*^9, 3.643030015692548*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8746833622342254`", ",", "0.8351459610075451`", ",", 
   "0.7642115270650067`", ",", "0.752975725420356`", ",", 
   "0.5538390940864282`", ",", "0.15452458034508787`", ",", 
   "0.07828794665897654`"}], "}"}]], "Output",
 CellChangeTimes->{{3.643029992700018*^9, 3.6430300163046503`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\<mystring\>\""], "Input",
 CellChangeTimes->{{3.643030049321158*^9, 3.643030052755293*^9}}],

Cell[BoxData["\<\"mystring\"\>"], "Output",
 CellChangeTimes->{3.643030055633688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{"\"\<glaba\>\"", ",", "\"\<blaga\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.643030104373376*^9, 3.643030114409123*^9}}],

Cell[BoxData["\<\"glabablaga\"\>"], "Output",
 CellChangeTimes->{3.643030115023876*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{"\"\<Next is true.\>\"", ",", "\"\<Back is false.\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.643030126375073*^9, 3.643030143746443*^9}}],

Cell[BoxData["\<\"Next is true.Back is false.\"\>"], "Output",
 CellChangeTimes->{3.6430301442886963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.643030151359508*^9, 3.643030171815794*^9}}],

Cell[BoxData["\<\"{{1, 2}, {3, 4}}\"\>"], "Output",
 CellChangeTimes->{3.643030172378356*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "[", "\"\<{{1, 2}, {3, 4}}\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.643030174284676*^9, 3.643030189077667*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643030189549756*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringSplit", "[", 
  RowBox[{"\"\<{3,1,2,3,4,1,2,3}\>\"", ",", "\"\<1\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6430302201236277`*^9, 3.643030233666794*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{3,\"\>", ",", "\<\",2,3,4,\"\>", ",", "\<\",2,3}\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.643030234134308*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<{3,4,12,3,4,1,2,3,1,1,2,3,4,1}\>\"", ",", 
   RowBox[{"\"\<1\>\"", "\[Rule]", "\"\<10\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643030237699029*^9, 3.643030263639064*^9}}],

Cell[BoxData["\<\"{3,4,102,3,4,10,2,3,10,10,2,3,4,10}\"\>"], "Output",
 CellChangeTimes->{3.6430302643189287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Characters", "[", "\"\<catfish\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.64303027823147*^9, 3.643030282483931*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"c\"\>", ",", "\<\"a\"\>", ",", "\<\"t\"\>", ",", "\<\"f\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"s\"\>", ",", "\<\"h\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.643030282989266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StringReplace", "[", 
     RowBox[{"#", ",", 
      RowBox[{"\"\<110\>\"", "\[Rule]", "\"\<10000011101\>\""}]}], "]"}], " ",
     "&"}], ",", "\"\<110110110\>\"", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.643030299823349*^9, 3.643030360834488*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"110110110\"\>", 
   ",", "\<\"100000111011000001110110000011101\"\>", 
   ",", "\<\"\
1000001100000111011000001110100001100000111011000001110100001100000111011\"\>\
", ",", "\<\"\
100000100000111010000110000011101100000111010000110000011101100001000001110100\
001100000111011000001110100001100000111011000010000011101000011000001110111\"\
\>", ",", \
"\<\"1000001000001100000111011000010000011101000011000001110110000011101000011\
000001110110000100000111010000110000011101100000111010001000001100000111011000\
010000011101000011000001110110000011101000011000001110110000100000111010000110\
0000111011000001110100010000011000001110110000100000111010000110000011101111\"\
\>", ",", \
"\<\"1000001000001000001110100001100000111011000001110100010000011000001110110\
000100000111010000110000011101100000111010000110000011101100001000001110100001\
100000111011000001110100010000011000001110110000100000111010000110000011101100\
000111010000110000011101100010000010000011101000011000001110110000011101000100\
000110000011101100001000001110100001100000111011000001110100001100000111011000\
010000011101000011000001110110000011101000100000110000011101100001000001110100\
001100000111011000001110100001100000111011000100000100000111010000110000011101\
10000011101000100000110000011101100001000001110100001100000111011111\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.643030335179447*^9, 3.643030363828409*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"conv", "[", "x_", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "==", "\"\<0\>\""}], ",", "1", ",", "2"}], "]"}], "&"}], 
    ",", 
    RowBox[{"Characters", "[", "x", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643030380272093*^9, 3.6430304466247597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conv", "[", "\"\<110110110\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.64303042226018*^9, 3.643030424841832*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "2", ",", "1", ",", "2", ",", "2", ",", "1", ",", "2", ",", "2", 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.643030425416059*^9, 3.643030449218212*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"conv", "[", "#", "]"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"100", ",", 
          RowBox[{"StringLength", "[", "#", "]"}]}], "]"}]}], "]"}], " ", 
      "&"}], ",", 
     RowBox[{"NestList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\"\<110\>\"", "\[Rule]", "\"\<100011101\>\""}]}], "]"}], 
        "&"}], ",", "\"\<110110110\>\"", ",", "15"}], "]"}]}], "]"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.643030491422811*^9, 3.6430305337690077`*^9}, {
  3.643030594465397*^9, 3.643030718288431*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztmTFKA2EQhRf0ABZiLwQs0lspf2spHkFiHew9g2BpYWNlIXiAWKQzhX3S
KEIqY6MniItgaxBd5r1/vsBi8cA3882byUK2j4dHJ2tN02y0z6B91ttn8bjf
Oxu+levLnenmZFweBqfLi9dxab4+7+Xj4H7vqv9cdu8Wt1uzUZkvz28On17+
Tccff/x1/f+qR/ffdf3R9XXNHz7a+Wa+3vmHP/dfmX/0fKL5449/Zn/3+riP
dfOP7i87f/iQT2X+6vN193fnr84Xf/wz+9d+X+APH35/8K3PPf/w5/4r86+d
j3p/+OOvvF/q9bnfR/jzfqDMHz7kU5m/+nzd/d35R++X+nzxx5/74ntf3PnD
RzvfzNc7//Dn/ivzh0/u/cc/t797fe73Ef68Hyjzhw/5VOavPl93f3f+2fdL
vT/8c/tzX3Lzh492vpmvd/7hz/1X5g+fuvOpPl/8tfdLvT73+wj/uu+vO3/4
kE9l/urzdfd3589+sV/46/q754/7Ah9+f2C+qnzgz/1X5g8f8tklf/X+svu7
1+d+H+HP/VXmDx/yqcxffb7u/u782S/4KNef3T8639H9ZecPH+18M1/v/MOf
+6/MHz7kU5m/+nzd/d3rU89f7flQ38/o+brzhw/5VOYfPZ/s/KP7y84fPt75
jp5PtL96PthP7hf5zMs/ej7Z+Uf3l50/fMinMv/o+dTOP7p+9frc8+3OJ7q/
7PzhQz6V+a/Sf/77/UFHR0dH/63O9xPf3/Dpjs+q/UNHR0dHR0dHz6ZHv5+p
///o+aCjo6Ojo6Ojo6PXpH8CaltoUw==
   "], {{0, 0}, {100, 16}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.6430306756273613`*^9, 3.6430307198806458`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cat", "=", "7"}]], "Input",
 CellChangeTimes->{{3.643030791328948*^9, 3.643030794335137*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.643030794856588*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["cat"], "Input",
 CellChangeTimes->{{3.6430307959202747`*^9, 3.643030796583061*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.643030797019209*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "=", 
  RowBox[{"3", "+", 
   RowBox[{"2", "\[ImaginaryI]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", 
  SqrtBox["2"]}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  SuperscriptBox["\[ExponentialE]", "1.5"]}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", 
  FractionBox[
   RowBox[{"1", "+", 
    SqrtBox["2"]}], "2"]}], "\[IndentingNewLine]", 
 RowBox[{"a", "+", "b", "+", "c", "+", "d"}]}], "Input",
 CellChangeTimes->{{3.643030801861589*^9, 3.64303080643937*^9}, {
  3.643031099219028*^9, 3.643031196021317*^9}}],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"2", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.643031197478203*^9}],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{3.643031197480996*^9}],

Cell[BoxData["4.4816890703380645`"], "Output",
 CellChangeTimes->{3.643031197484329*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SqrtBox["2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.643031197486608*^9}],

Cell[BoxData[
 RowBox[{"10.103009413897707`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.64303119748912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "+", "2"}]], "Input",
 CellChangeTimes->{{3.643031207629169*^9, 3.643031208435738*^9}}],

Cell[BoxData[
 RowBox[{"12.103009413897707`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.643031208961898*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "=", 
  SuperscriptBox["x", "2"]}]], "Input",
 CellChangeTimes->{{3.643031349386732*^9, 3.643031355328533*^9}}],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Output",
 CellChangeTimes->{3.643031356403618*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", 
    RowBox[{"2", "  "}]], "+", 
   RowBox[{"Sin", "[", "x", "]"}]}], "/.", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{
    SuperscriptBox["y", "2"], "+", "z"}]}]}]], "Input",
 CellChangeTimes->{{3.643031369126927*^9, 3.64303139153198*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "4"], "+", "z"}], ")"}], "2"], "+", 
  RowBox[{"Sin", "[", 
   RowBox[{
    SuperscriptBox["x", "4"], "+", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.643031392689756*^9}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.643031295713254*^9, 3.643031334264604*^9}, {
  3.643033855555394*^9, 3.6430338659634733`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Understanding ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Title",
 CellChangeTimes->{{3.6430339216027184`*^9, 3.643033934162793*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigToExp", "[", 
  RowBox[{"Sin", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643033940628468*^9, 3.643033945548801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{3.643033946407927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", 
  RowBox[{"Exp", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643033949024132*^9, 3.643033956093029*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cosh", "[", "x", "]"}], "+", 
  RowBox[{"Sinh", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6430339565342484`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", "1"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"x", "-", "1"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643034021073558*^9, 3.643034029957765*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.643034030320924*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"sin", "[", "x", "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643034172458647*^9, 3.643034209012663*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.643034193682341*^9, 3.643034209444298*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.643034225710738*^9, 3.643034231284684*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.643034238355472*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.643034245620101*^9, 3.643034250604142*^9}, {
  3.643034295802946*^9, 3.6430343139156313`*^9}}],

Cell[BoxData["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
998628034825342117067982148086513282306647093844376249654`100."], "Output",
 CellChangeTimes->{3.6430343143337727`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"poly", "=", 
  RowBox[{"1", "+", 
   RowBox[{"3", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"5", 
    SuperscriptBox["x", "3"]}], "+", 
   RowBox[{"6", 
    RowBox[{"Sin", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.64303433669993*^9, 3.643034352843956*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"6", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.643034356161194*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Coefficient", "[", 
  RowBox[{"poly", ",", 
   SuperscriptBox["x", "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.643034358362432*^9, 3.643034365843038*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.643034366190494*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"z", "\[Equal]", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6430344228084297`*^9, 3.643034430507465*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "z"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643034430936584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}]]}], "}"}]}], "}"}]}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "z"}]]}], ",", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "z"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.643034470407127*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "1"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"x", "-", "y"}], "\[Equal]", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643034470554783*^9, 3.6430345116661587`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643034648495089*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}]}], ",", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", "x"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.643034518433992*^9, 3.643034609717793*^9, 
  3.643034648523774*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"3", "+", 
   RowBox[{"2", "\[ImaginaryI]"}]}]}]], "Input",
 CellChangeTimes->{{3.643034564401482*^9, 3.643034579759335*^9}}],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"2", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.64303458651956*^9, 3.643034683244392*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["z", "2"]], "Input",
 CellChangeTimes->{{3.6430345878319883`*^9, 3.6430345895544453`*^9}}],

Cell[BoxData[
 RowBox[{"5", "+", 
  RowBox[{"12", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.643034591553482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.6430345945648413`*^9, 3.643034598922029*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.643034599404839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Arg", "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.643034675375464*^9, 3.643034704225381*^9}}],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  FractionBox["2", "3"], "]"}]], "Output",
 CellChangeTimes->{{3.643034678805369*^9, 3.643034704592045*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.643034715987903*^9, 3.6430347355147038`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643034721905037*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "=", 
  RowBox[{"{", 
   RowBox[{"v1", ",", "v2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6430347244766083`*^9, 3.643034728792552*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"v1", ",", "v2"}], "}"}]], "Output",
 CellChangeTimes->{3.643034729580132*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6430347390483437`*^9, 3.643034741409628*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643034742028737*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", ".", "v"}], "\[IndentingNewLine]", 
 RowBox[{"%", " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.643034751687777*^9, 3.643034762026964*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"v1", "+", 
    RowBox[{"2", " ", "v2"}]}], ",", 
   RowBox[{
    RowBox[{"3", " ", "v1"}], "+", 
    RowBox[{"4", " ", "v2"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.643034753277808*^9, 3.6430347625456247`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"v1", "+", 
        RowBox[{"2", " ", "v2"}]}]},
      {
       RowBox[{
        RowBox[{"3", " ", "v1"}], "+", 
        RowBox[{"4", " ", "v2"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.643034753277808*^9, 3.643034762550556*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Det", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Inverse", "[", "A", "]"}], " ", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixPower", "[", 
   RowBox[{"A", ",", "2"}], "]"}], " ", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox["A", "2"], " ", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", "A", "]"}], " ", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigenvalues", "[", "A", "]"}], " ", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{"A", ",", "A"}], "]"}], " ", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"A", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.643034787501584*^9, 3.6430348846161127`*^9}}],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellChangeTimes->{3.643034888232628*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "2"}], "1"},
     {
      FractionBox["3", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643034888236947*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "10"},
     {"15", "22"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6430348882401857`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "4"},
     {"9", "16"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643034888243226*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "3"},
     {"2", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6430348882464237`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          SqrtBox["33"]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          SqrtBox["33"]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6430348882495117`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "2", "4"},
     {"3", "4", "6", "8"},
     {"3", "6", "4", "8"},
     {"9", "12", "12", "16"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643034888252007*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"1"},
      {"2"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643034888254387*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.6430348882566843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "*", "j"}], " ", "+", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"i", "+", "j"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M", " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.64303485393526*^9, 3.6430348578452272`*^9}, {
  3.6430349215343323`*^9, 3.643034955079708*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "+", 
       RowBox[{"Sin", "[", "2", "]"}]}], 
      RowBox[{"2", "+", 
       RowBox[{"Sin", "[", "3", "]"}]}], 
      RowBox[{"3", "+", 
       RowBox[{"Sin", "[", "4", "]"}]}], 
      RowBox[{"4", "+", 
       RowBox[{"Sin", "[", "5", "]"}]}], 
      RowBox[{"5", "+", 
       RowBox[{"Sin", "[", "6", "]"}]}], 
      RowBox[{"6", "+", 
       RowBox[{"Sin", "[", "7", "]"}]}], 
      RowBox[{"7", "+", 
       RowBox[{"Sin", "[", "8", "]"}]}], 
      RowBox[{"8", "+", 
       RowBox[{"Sin", "[", "9", "]"}]}], 
      RowBox[{"9", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"10", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}]},
     {
      RowBox[{"2", "+", 
       RowBox[{"Sin", "[", "3", "]"}]}], 
      RowBox[{"4", "+", 
       RowBox[{"Sin", "[", "4", "]"}]}], 
      RowBox[{"6", "+", 
       RowBox[{"Sin", "[", "5", "]"}]}], 
      RowBox[{"8", "+", 
       RowBox[{"Sin", "[", "6", "]"}]}], 
      RowBox[{"10", "+", 
       RowBox[{"Sin", "[", "7", "]"}]}], 
      RowBox[{"12", "+", 
       RowBox[{"Sin", "[", "8", "]"}]}], 
      RowBox[{"14", "+", 
       RowBox[{"Sin", "[", "9", "]"}]}], 
      RowBox[{"16", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"18", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"20", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}]},
     {
      RowBox[{"3", "+", 
       RowBox[{"Sin", "[", "4", "]"}]}], 
      RowBox[{"6", "+", 
       RowBox[{"Sin", "[", "5", "]"}]}], 
      RowBox[{"9", "+", 
       RowBox[{"Sin", "[", "6", "]"}]}], 
      RowBox[{"12", "+", 
       RowBox[{"Sin", "[", "7", "]"}]}], 
      RowBox[{"15", "+", 
       RowBox[{"Sin", "[", "8", "]"}]}], 
      RowBox[{"18", "+", 
       RowBox[{"Sin", "[", "9", "]"}]}], 
      RowBox[{"21", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"24", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"27", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}], 
      RowBox[{"30", "+", 
       RowBox[{"Sin", "[", "13", "]"}]}]},
     {
      RowBox[{"4", "+", 
       RowBox[{"Sin", "[", "5", "]"}]}], 
      RowBox[{"8", "+", 
       RowBox[{"Sin", "[", "6", "]"}]}], 
      RowBox[{"12", "+", 
       RowBox[{"Sin", "[", "7", "]"}]}], 
      RowBox[{"16", "+", 
       RowBox[{"Sin", "[", "8", "]"}]}], 
      RowBox[{"20", "+", 
       RowBox[{"Sin", "[", "9", "]"}]}], 
      RowBox[{"24", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"28", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"32", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}], 
      RowBox[{"36", "+", 
       RowBox[{"Sin", "[", "13", "]"}]}], 
      RowBox[{"40", "+", 
       RowBox[{"Sin", "[", "14", "]"}]}]},
     {
      RowBox[{"5", "+", 
       RowBox[{"Sin", "[", "6", "]"}]}], 
      RowBox[{"10", "+", 
       RowBox[{"Sin", "[", "7", "]"}]}], 
      RowBox[{"15", "+", 
       RowBox[{"Sin", "[", "8", "]"}]}], 
      RowBox[{"20", "+", 
       RowBox[{"Sin", "[", "9", "]"}]}], 
      RowBox[{"25", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"30", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"35", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}], 
      RowBox[{"40", "+", 
       RowBox[{"Sin", "[", "13", "]"}]}], 
      RowBox[{"45", "+", 
       RowBox[{"Sin", "[", "14", "]"}]}], 
      RowBox[{"50", "+", 
       RowBox[{"Sin", "[", "15", "]"}]}]},
     {
      RowBox[{"6", "+", 
       RowBox[{"Sin", "[", "7", "]"}]}], 
      RowBox[{"12", "+", 
       RowBox[{"Sin", "[", "8", "]"}]}], 
      RowBox[{"18", "+", 
       RowBox[{"Sin", "[", "9", "]"}]}], 
      RowBox[{"24", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"30", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"36", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}], 
      RowBox[{"42", "+", 
       RowBox[{"Sin", "[", "13", "]"}]}], 
      RowBox[{"48", "+", 
       RowBox[{"Sin", "[", "14", "]"}]}], 
      RowBox[{"54", "+", 
       RowBox[{"Sin", "[", "15", "]"}]}], 
      RowBox[{"60", "+", 
       RowBox[{"Sin", "[", "16", "]"}]}]},
     {
      RowBox[{"7", "+", 
       RowBox[{"Sin", "[", "8", "]"}]}], 
      RowBox[{"14", "+", 
       RowBox[{"Sin", "[", "9", "]"}]}], 
      RowBox[{"21", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"28", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"35", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}], 
      RowBox[{"42", "+", 
       RowBox[{"Sin", "[", "13", "]"}]}], 
      RowBox[{"49", "+", 
       RowBox[{"Sin", "[", "14", "]"}]}], 
      RowBox[{"56", "+", 
       RowBox[{"Sin", "[", "15", "]"}]}], 
      RowBox[{"63", "+", 
       RowBox[{"Sin", "[", "16", "]"}]}], 
      RowBox[{"70", "+", 
       RowBox[{"Sin", "[", "17", "]"}]}]},
     {
      RowBox[{"8", "+", 
       RowBox[{"Sin", "[", "9", "]"}]}], 
      RowBox[{"16", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"24", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"32", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}], 
      RowBox[{"40", "+", 
       RowBox[{"Sin", "[", "13", "]"}]}], 
      RowBox[{"48", "+", 
       RowBox[{"Sin", "[", "14", "]"}]}], 
      RowBox[{"56", "+", 
       RowBox[{"Sin", "[", "15", "]"}]}], 
      RowBox[{"64", "+", 
       RowBox[{"Sin", "[", "16", "]"}]}], 
      RowBox[{"72", "+", 
       RowBox[{"Sin", "[", "17", "]"}]}], 
      RowBox[{"80", "+", 
       RowBox[{"Sin", "[", "18", "]"}]}]},
     {
      RowBox[{"9", "+", 
       RowBox[{"Sin", "[", "10", "]"}]}], 
      RowBox[{"18", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"27", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}], 
      RowBox[{"36", "+", 
       RowBox[{"Sin", "[", "13", "]"}]}], 
      RowBox[{"45", "+", 
       RowBox[{"Sin", "[", "14", "]"}]}], 
      RowBox[{"54", "+", 
       RowBox[{"Sin", "[", "15", "]"}]}], 
      RowBox[{"63", "+", 
       RowBox[{"Sin", "[", "16", "]"}]}], 
      RowBox[{"72", "+", 
       RowBox[{"Sin", "[", "17", "]"}]}], 
      RowBox[{"81", "+", 
       RowBox[{"Sin", "[", "18", "]"}]}], 
      RowBox[{"90", "+", 
       RowBox[{"Sin", "[", "19", "]"}]}]},
     {
      RowBox[{"10", "+", 
       RowBox[{"Sin", "[", "11", "]"}]}], 
      RowBox[{"20", "+", 
       RowBox[{"Sin", "[", "12", "]"}]}], 
      RowBox[{"30", "+", 
       RowBox[{"Sin", "[", "13", "]"}]}], 
      RowBox[{"40", "+", 
       RowBox[{"Sin", "[", "14", "]"}]}], 
      RowBox[{"50", "+", 
       RowBox[{"Sin", "[", "15", "]"}]}], 
      RowBox[{"60", "+", 
       RowBox[{"Sin", "[", "16", "]"}]}], 
      RowBox[{"70", "+", 
       RowBox[{"Sin", "[", "17", "]"}]}], 
      RowBox[{"80", "+", 
       RowBox[{"Sin", "[", "18", "]"}]}], 
      RowBox[{"90", "+", 
       RowBox[{"Sin", "[", "19", "]"}]}], 
      RowBox[{"100", "+", 
       RowBox[{"Sin", "[", "20", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643034955440936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "M", "]"}]], "Input",
 CellChangeTimes->{{3.643034971593876*^9, 3.6430350170704327`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.9092974268256817`", ",", "2.1411200080598674`", ",", 
     "2.2431975046920716`", ",", "3.0410757253368614`", ",", 
     "4.720584501801074`", ",", "6.656986598718789`", ",", 
     "7.9893582466233815`", ",", "8.412118485241757`", ",", 
     "8.45597888911063`", ",", "9.000009793449296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.1411200080598674`", ",", "3.2431975046920716`", ",", 
     "5.041075725336862`", ",", "7.720584501801074`", ",", 
     "10.656986598718788`", ",", "12.989358246623382`", ",", 
     "14.412118485241757`", ",", "15.45597888911063`", ",", 
     "17.000009793449298`", ",", "19.463427081999566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.2431975046920716`", ",", "5.041075725336862`", ",", 
     "8.720584501801074`", ",", "12.656986598718788`", ",", 
     "15.989358246623382`", ",", "18.412118485241756`", ",", 
     "20.45597888911063`", ",", "23.000009793449298`", ",", 
     "26.463427081999566`", ",", "30.42016703682664`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0410757253368614`", ",", "7.720584501801074`", ",", 
     "12.656986598718788`", ",", "16.989358246623382`", ",", 
     "20.412118485241756`", ",", "23.45597888911063`", ",", 
     "27.000009793449298`", ",", "31.463427081999566`", ",", 
     "36.42016703682664`", ",", "40.99060735569487`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.720584501801074`", ",", "10.656986598718788`", ",", 
     "15.989358246623382`", ",", "20.412118485241756`", ",", 
     "24.45597888911063`", ",", "29.000009793449298`", ",", 
     "34.46342708199956`", ",", "40.42016703682664`", ",", 
     "45.99060735569487`", ",", "50.65028784015712`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6.656986598718789`", ",", "12.989358246623382`", ",", 
     "18.412118485241756`", ",", "23.45597888911063`", ",", 
     "29.000009793449298`", ",", "35.46342708199956`", ",", 
     "42.42016703682664`", ",", "48.99060735569487`", ",", 
     "54.65028784015712`", ",", "59.712096683334934`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7.9893582466233815`", ",", "14.412118485241757`", ",", 
     "20.45597888911063`", ",", "27.000009793449298`", ",", 
     "34.46342708199956`", ",", "42.42016703682664`", ",", 
     "49.99060735569487`", ",", "56.65028784015712`", ",", 
     "62.712096683334934`", ",", "69.03860250812045`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8.412118485241757`", ",", "15.45597888911063`", ",", 
     "23.000009793449298`", ",", "31.463427081999566`", ",", 
     "40.42016703682664`", ",", "48.99060735569487`", ",", 
     "56.65028784015712`", ",", "63.712096683334934`", ",", 
     "71.03860250812045`", ",", "79.24901275322833`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8.45597888911063`", ",", "17.000009793449298`", ",", 
     "26.463427081999566`", ",", "36.42016703682664`", ",", 
     "45.99060735569487`", ",", "54.65028784015712`", ",", 
     "62.712096683334934`", ",", "71.03860250812045`", ",", 
     "80.24901275322833`", ",", "90.14987720966295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9.000009793449296`", ",", "19.463427081999566`", ",", 
     "30.42016703682664`", ",", "40.99060735569487`", ",", 
     "50.65028784015712`", ",", "59.712096683334934`", ",", 
     "69.03860250812045`", ",", "79.24901275322833`", ",", 
     "90.14987720966295`", ",", "100.91294525072763`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.643034975448843*^9, 3.6430350175101433`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "+", 
   RowBox[{"Sin", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.643035034381002*^9, 3.643035060201213*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "1", "]"}], "+", 
  RowBox[{"Sin", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.643035061734456*^9}],

Cell[BoxData["1.38177329067603622405343892907327560334`5."], "Output",
 CellChangeTimes->{3.64303506174576*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "+", 
   RowBox[{"Cos", "[", "y", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"1", ",", "2"}], "]"}], " ", "//", "N"}]}], "Input",
 CellChangeTimes->{{3.643035075041564*^9, 3.643035091918723*^9}, {
  3.64303519487844*^9, 3.6430351967580442`*^9}}],

Cell[BoxData["0.4253241482607541`"], "Output",
 CellChangeTimes->{3.6430350938955383`*^9, 3.6430351974272003`*^9}]
}, Open  ]],

Cell["\<\
So for using the sum, just use escape and brains. Then for the limits, use \
ctrl+_ and ctrl+% (without shift..)\
\>", "Text",
 CellChangeTimes->{{3.643035438919714*^9, 3.643035495447543*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"av1", "[", "v_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Length", "[", "v", "]"}]], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], 
      RowBox[{"Length", "[", "v", "]"}]], 
     RowBox[{"v", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"av2", "[", "v_", "]"}], ":=", 
   FractionBox[
    RowBox[{"Total", "[", "v", "]"}], 
    RowBox[{"Length", "[", "v", "]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"av1", "[", "data", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"av2", "[", "data", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.643035221715538*^9, 3.643035285086583*^9}, {
  3.6430353573337383`*^9, 3.643035425956431*^9}, {3.6430355002841387`*^9, 
  3.643035537965476*^9}}],

Cell[BoxData["3.5`"], "Output",
 CellChangeTimes->{{3.643035520801607*^9, 3.643035538394951*^9}}],

Cell[BoxData["3.5`"], "Output",
 CellChangeTimes->{{3.643035520801607*^9, 3.6430355383987827`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.643035086368422*^9, 3.643035087991358*^9}}],

Cell[CellGroupData[{

Cell["Just testing how to use subsections", "Section",
 CellChangeTimes->{{3.64303558986541*^9, 3.643035595567924*^9}}],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643035605794834*^9, 3.643035613090361*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-0.9999993677877383, 0.9999995758683373}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.643035613699685*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6430356381838284`*^9, 3.64303567428729*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
fl0JxlcY8P+Z5KCV9eF3opOVYNcZmfDweg6afWM/5ZKjBDb9F12Dojko/tTg
B4keJZgunt2qzWKjBpQscrxfCfpZrAs3WthIRcbS/htHCfa7ueiya9noyatk
bugIpdctXsuDH9no46Cl+jyvMlh/VTG1jmaj7jMpYYMqyrDQSeexmzYbmVzc
trPeThliuifvPN/JQgFWY/cMHZThiPTF17fNWKiU9qA/fq8y5K94eOaMEQvZ
5I2F2Dgrw7tgLTVCYyG3qQfvyk4qQyesWM3T0o9i/SaUP1xThvZ4X7f4Y/2o
PfBx9/0CZQhn/5wq8qSel37c8y4tUoa5mMclZ/b3ITG1m1O9pcqw/cTOLvnt
fWglDpNa+V0ZYsdX7NXV60Mhs8dWlzYog88lHulkbi/S8NUJ6x1QhmRLnpX3
vHrR0TNZSwyYKrBUwWqd2+EexDqS51YcrgK3z50+YMfoQhLlm+J0olTAaCvv
jVrJLrRseUVefKwKhJE7V80nO9GJsX9ShxNVQLAusXq6uhOxwwTy+B+pwJO6
gVdv/Ch+YiNpXqACB23udh+o7UDcvq6cryMq8Pz96FmR8+1o4KSscKXLIhD+
9jPmjHYLytzyfeaonipweGOPXQ2sRd3u+qv5R1VhJmJ51aYdn5DSi6aE8MrF
kJByc+piXi4OcfZ5WLlNDSJOuYlzon/i8Rl6zLY8NTh1/5PwDbUWPDC8LWIy
Xw3S/VqCAmxacG+/f+iTj2qwTuBz9+4rLbipsc2fv1ANHtaVsz82t+CCt8+8
PnxRgxsLXLTx1lZ89cRaW906NQhPCR3azdeGZf7sWShO1IAlOxrq4t6OtT/c
ulOuoQ5Fn5pbb0p04bLT3m/3a6qD+fuidT6Lu7C79pZqtpY6CDeM3IeVXfhZ
4pSAtK46rL+/2OGdYxfW8T7gvctAHb7F7loj8LAL6y5hWv5Zrw5VfDpdiw27
8fK4zBGOgzps7DdSErXuwVXm4dIBe9ShXta3dcWhHuw1c0hHZp86JG7Ptrby
7sFZHgucVx5QB0tRmckd8T1Yf/PZ7+cPq4O6WK/Li189eOXk2ofzp9RhcODG
1cd7e7HR4c82CyLUYetzDWLr0IdV0rpNSiPVIfPWQo32o32Yr0tY80K0OhSw
igRcLvThqqNbZ/7EqYNWbuUdrdt9+Khn9dOnN6l86lLL6hv78O3Tv3khTR0U
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
H/8PT6px5A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-0.9999997969248231, 0.9999999999999791}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6430356749234123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6430356806384897`*^9, 3.6430356973386793`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
yL4b70rNkuRpZaTnYlbep8ONZv73/sPAuC7aDioyQvltxpYvNvD7DzVmXW6q
xEkLjw9TLdk9tpr0xDmvzMyd2edM6kgfY+xjiO0z4DdG5lnd7np+vanIniuh
8S6ksI8R6VPFnnvDxGKBcD+/zxDCnjv7iYNLzKwS0se2QmKUTl9p4f3MWaL5
WZVU33enpZ4bbpMTcp0anR7/tc9wnT2/T/8D9bt38PsMO4okFzr4yAo1Iu27
G/Xk9xke+HY9kD+zm9Db47Mo8Q+/r1Lzf+wzhLLn2lUdS6nU5vcZ8CsM9sse
++ga1Xcbe+7elBlnNFfw+wyqsGtWfjXU5g2/z9C+WDI9WNRNKDN4c/KdC/y+
ilqOzNb8md2FevOl5vz3PkOXf86fFYTTCw0Tovrz7zcd64D5qfomF2qovgN7
SQ/Q6SsvXHZukkzTE35fZcf/sZ8whT33q3n9c4de/D5Sp92/zxUKNQ9pf3Oi
+uL30IRPc4dW8PsJ3rATl9v+Yu/3En6dO0dOXqdvL+Hhtevq/3vf4LRIdkN+
cE/hCq3TW72W5VO9lnrLehpu6ylUWCx179dy/rt+/8/5eA+hmc28JUt711F9
rxt1iw4WdRfmdlh+VxvI75+ks3V3utg+wENWHpUlcj9KK5L5fTNWHiXHnQvm
i1ypvotZeUx/JfewCoyn79SWPVfHW0nGeBC/T3IjSXpHfltv4fVvxna3hkdQ
fU89kbZSiestlF4edbvfT3682Gkp/cTwXm+hv3St5mVFfn8bdgLxJwrr3M7w
+9tTWTuK880aIcwsI32U/nnvvYWne7Y6HNYrJ326pMudVonrJZTkBFYn3Ev/
P+v6zWLr+uus/C3F7Tdkln0ifVB+o8zybnIJ/L7iDlb+lWdNfNYP+kT92wBW
nmYt+fbZ7/j+rT3t3/KMi5CTerGK/96XdchoOOj3FTbPTz3/Pc2DdJv6T/vs
K5Sa1scoqyiIdBsUIGOuItdXqNDlb/OhigjSDfYaUx8stdZ+kkC61e2XiQv2
7SOM3TLmtJxUOr+/xMqrG9kw3GNTJun2fpBMP511fYQG3SuvnUrLENuX6yuU
Nfrf9ftSVv6A29o5oTaPSDeU36To3NplBtakmxIrv27FpTcPxr7g9yFZOYP9
F4bFnI8nPfFb+mOEz+ppGaRnKCtn6NC7s7s8+UJ6dlWT7aGT3k+Y7ykb0rkk
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
F40Urit5W2He5kOd3yv4HZDPNgh+D+St+KVThH9PzS8doOMLdD+LM8/hCpk5
C7iLw3LzFhekjoGIiyeWsTE5Wq/U8Rv27IDUc5pvfnDq+6sRbLvgH8bknjMb
JUfhu7h//c6dhdfp18ExbIvym12dm3/amfXBGku9viYWnjMfqf9nhXP9nszV
YNv4aWEe7rbUvNgOwd+CePiTwrxRd/U/vfBzfBXMw10uXAf/VvgYPc/bObXt
mCL9aanj25ty83mbJC/V8YPCf6j/JcEx1QXS3VPex4/E9oU5wB+EpxYe96fg
d3liOf4ZhfMP3gNxBOM0z+y37xf+QHKy+hybmusbl5vH2o01kXvtvCk5qTDH
9bn6XK/jQdLvmjmuORebkDj+IA5pmTle6Ilf0PG1uTnL1yXv0jhHp+YkH9Dx
rdI3Vf8HpD9T+t+YX4W5Sr4F/gqeokXpq/jujcq8rUl5TGy3X+r1gK/Cfu6n
Pn0LPyNj9i6cm//M+yyc4/8uPIV3jw/Scb/UMcnyxHHKXZLv5Y6Jpgm/n/t5
edY2meM5jvkuPQv35/1/kzm3aJ35+9ya/u+7IseXdukG/Lbkb+r3BHZU8tfM
ecyJmfm8C1Nzf99q/Nbqf5P6L8p9v8epzzfSH67j66X/V7q+qXm97/Ar0t8c
vZ76pF57i3NzdOQIE4Px9/ix4PNwhj+wdvg20Txcf127SnJscAxJzHlb8O8Q
//zC/FH/e+BVmCfCd0fHR4NSx0b4/MtSxyLEm9gibNKdwfnQPrruqsK/Q7yE
v8Hv9MJPBccexOT3BY9B7DQteGzisYc01pVqV6TmhojXZgb7oJGln3qujFue
JSfLzQ+cwHMGv2NiksfKWA9ueVzh2HJ+GUMSCxLHwJeMSc1N/1aYo9pKzzu2
8Hn847WFz88u+bROxDfkOoXjOmIeeN9rUh//VZhLqxwdP16X/i+uRcJ/Ef9e
nzr2/U/9r5DuAHiJwvOKtXlTYX+CH9kTG5CaU7i18BrEhlctfdYIXZ9G+8nW
BGtqVxGbRNvOm1Jf07y0G1Nyc6RDsaHR6/jm1Gv1XeZTYh//dm6bQ/yURcdK
x0THWeNT+wN4kdtT9+sgOSm1Dz5FcnLqsU6VvIN+wu9ojNskJ7Auy9/iN6el
/vZ8d3Iech9i7vfK9Uue/H65fh+UnFX257rZZZyTlnYQWwG/cE3w+mKdbc49
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
5WMHVw==
          "]], Polygon3DBox[CompressedData["
1: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
PXyd/or/Ax/VbTM=
          "]], Polygon3DBox[CompressedData["
1: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
9zA=
          "]], 
         Polygon3DBox[{{1356, 884, 504, 505, 885, 1357}, {1241, 713, 824, 
          1515, 1091, 1092}, {1240, 712, 823, 1514, 1089, 1090}, {1476, 722, 
          547, 546, 896, 1362}, {1239, 711, 889, 1534, 1087, 1088}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jsvpGEYBuB3MBbrFBKFBPEDVkKlsL+AbEEjNEgUg3W2IYJkm92Immgl
zoeIEBIRkRn0lnVYx0Kr3Wy31xfFPdf9zHx5v2e+mcqOvsbeWAhhWtaVqC97
yZXX9BAKzW+s4D9WMZ4RwmcWsYGVbGU1a6RL/8IxtvAnOznHXi5xgnucYYrf
4653z035ZV7lqCTSQrg0d/GK3fzNHl7zK2+ic3nLPvbLnT7APxzkPYf4wGE+
coRP/MZnnvl+k+65JS/mNS7Ish0vzPNMRs+KuxznYnSu3dtdN6u36U36D73Z
56NsYL0k9Cq2sCJ6j4WsYwY/8a8dylnrnHLnbEiBeYVlcir55lKmJE9PRr8X
T/iRx8zhEbN5yCwecF8+6CXck0y9mLsSj/ahVcIOrRK26fGEc8NU7P0/8h8J
ZEK5
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{997, 1329, 631, 996, 1542, 1192, 998, 1330, 1413, 1736, 1193,
        1412, 1331, 1415, 1194, 1414, 1527, 1543, 1417, 1195, 1416, 1528, 
       1544, 1196, 999, 1545, 1449, 1623, 1000, 1546, 1197, 1001, 1547, 1198, 
       1002, 1548, 1199, 1003, 1549, 1200, 1004, 1530, 1550, 1419, 1201, 1418,
        1531, 1551, 1421, 1202, 1420, 1737, 1334, 1422, 1203, 1336}], 
      Line3DBox[{1006, 1450, 1624, 1005, 641, 1007, 1332, 1552, 1204, 1338, 
       1333, 1553, 1205, 1339, 1529, 1554, 1206, 1008, 1555, 1207, 1009, 1556,
        1451, 1625, 1010, 1452, 1626, 1011, 1557, 1208, 1012, 1558, 1209, 
       1013, 1559, 1210, 1014, 1532, 1560, 1211, 1340, 1707, 1335, 1212, 1341,
        1708, 1337, 1213, 1015}], 
      Line3DBox[{1017, 1280, 1342, 1453, 1697, 1016, 1343, 1345, 1454, 1709, 
       1423, 1344, 652, 1018, 1561, 1214, 1019, 1562, 1215, 1020, 1563, 1216, 
       1021, 1564, 1455, 1627, 1022, 1281, 1456, 1698, 1023, 1282, 1457, 1699,
        1024, 1283, 1346, 1710, 1217, 1025, 1533, 1565, 1348, 1218, 1424, 
       1738, 1347, 1219, 1026, 1566, 1220, 1027, 1567, 1221, 1028}], 
      Line3DBox[{1029, 230, 875, 300, 231, 1700, 1030, 1458, 1628, 1031, 666, 
       1032, 1568, 1222, 1033, 1569, 1223, 1034, 1570, 1459, 1629, 1035, 232, 
       1701, 1036, 233, 876, 302, 234, 877, 304, 878, 235, 1037, 1571, 1224, 
       1038, 1572, 1225, 1039, 1573, 1226, 1040}], 
      Line3DBox[{1042, 1284, 1349, 1285, 1711, 1041, 1286, 1287, 1702, 1043, 
       1460, 1630, 1044, 1461, 1631, 1045, 681, 1046, 1574, 1227, 1047, 1575, 
       1462, 1632, 1048, 1288, 1289, 1712, 1049, 1290, 1350, 1291, 1713, 1050,
        1292, 1351, 1633, 1509, 1051, 1510, 1634, 1293, 1052, 1576, 1228, 
       1053, 1577, 1229, 1054, 1578, 1230, 1055}], 
      Line3DBox[{1057, 1294, 1352, 1295, 1703, 1056, 1296, 816, 1058, 1463, 
       1635, 1059, 1464, 1636, 1060, 1465, 1637, 1061, 696, 1062, 1714, 1356, 
       1357, 1715, 1063, 1297, 1353, 1298, 1716, 1064, 1299, 1354, 1638, 1511,
        1065, 1300, 1355, 1639, 1512, 1066, 1513, 1640, 1301, 1067, 1466, 
       1641, 1068, 1579, 1231, 1069, 1580, 1232, 1070}], 
      Line3DBox[{1074, 1303, 1581, 1233, 1072, 1582, 1234, 1076, 1583, 1235, 
       1078, 1584, 1236, 1080, 1585, 1237, 1082, 1586, 1238, 1084, 1535, 1587,
        1426, 710, 1086, 1359, 1588, 1239, 1088, 1305, 1589, 1240, 1090, 1307,
        1590, 1241, 1092, 1591, 1242, 1094, 1592, 1243, 1096, 1593, 1244, 
       1098, 1595, 1246, 1100}], 
      Line3DBox[{1099, 1245, 1594, 1097, 1652, 1474, 1095, 1651, 1473, 1093, 
       1650, 1472, 1091, 1515, 1649, 1306, 1089, 1514, 1648, 1360, 1304, 1087,
        1534, 1647, 1425, 1358, 1085, 1717, 1361, 891, 1083, 1646, 1471, 1081,
        1645, 1470, 1079, 1644, 1469, 1077, 1643, 1468, 1075, 1642, 1467, 
       1071, 822, 1302, 1073}], 
      Line3DBox[{1102, 1475, 1653, 1101, 1596, 1247, 1103, 1597, 1248, 1104, 
       1598, 1249, 1105, 1536, 1599, 1428, 1250, 1427, 1537, 1600, 1429, 1251,
        1363, 1719, 1362, 1476, 1718, 1106, 723, 1107, 1601, 1252, 1108, 1602,
        1253, 1109, 1603, 1254, 1110, 1604, 1255, 1111, 1539, 1605, 1431, 
       1256, 1430, 1739, 1365, 1432, 1257, 1112}], 
      Line3DBox[{1114, 1477, 1654, 1113, 1478, 1655, 1115, 1606, 1258, 1116, 
       1368, 1433, 1259, 1369, 1538, 1607, 1434, 1260, 1371, 1721, 1364, 1435,
        1261, 1117, 1608, 1479, 1656, 1118, 1480, 1657, 1119, 734, 1120, 1609,
        1262, 1121, 1610, 1263, 1122, 1611, 1264, 1123, 1720, 1366, 1436, 
       1265, 1374, 1722, 1367, 1437, 1266, 1376}], 
      Line3DBox[{1125, 1481, 1658, 1124, 1482, 1659, 1126, 1378, 1438, 1483, 
       1723, 1379, 1370, 1440, 1267, 1382, 1724, 1372, 1442, 1268, 1385, 1725,
        1373, 1269, 1127, 1612, 1484, 1660, 1128, 1485, 1661, 1129, 1486, 
       1662, 1130, 745, 1131, 1613, 1270, 1132, 1727, 1388, 1444, 1271, 1389, 
       1728, 1375, 1446, 1272, 1392, 1730, 1377, 1273, 1395}], 
      Line3DBox[{1134, 1487, 1663, 1133, 1488, 1664, 1135, 1380, 1439, 1381, 
       1732, 1136, 1383, 1441, 1384, 1137, 1726, 1386, 1443, 1387, 1138, 1614,
        1274, 1139, 1615, 1489, 1665, 1140, 1490, 1666, 1141, 1491, 1667, 
       1142, 1492, 1668, 1143, 942, 1396, 1144, 1729, 1390, 1445, 1391, 1145, 
       1731, 1393, 1447, 1394, 1146, 1616, 1275, 1147}], 
      Line3DBox[{1149, 1308, 1309, 1704, 1148, 1399, 1400, 1741, 1150, 1401, 
       1669, 1541, 1151, 1493, 1670, 1152, 1494, 1671, 1153, 1617, 1276, 1154,
        1618, 1495, 1672, 1155, 1310, 1311, 1705, 1156, 1312, 1313, 1706, 
       1157, 1314, 1673, 1516, 1158, 1540, 1740, 1448, 1397, 1159, 951, 1405, 
       1160, 1619, 1277, 1161, 1620, 1278, 1162}], 
      Line3DBox[{1164, 1315, 1398, 1316, 1734, 1163, 1317, 1402, 1674, 1517, 
       1165, 1496, 1675, 1166, 1497, 1676, 1167, 1498, 1677, 1168, 1499, 1678,
        1169, 1621, 1500, 1679, 1170, 1318, 1319, 1735, 1171, 1320, 1403, 
       1680, 1518, 1172, 1321, 1404, 1681, 1519, 1173, 1520, 1733, 1406, 1322,
        1174, 1501, 1682, 1175, 782, 1176, 1622, 1279, 1177}], 
      Line3DBox[{1191, 1411, 964, 1190, 1696, 1508, 1189, 1695, 1507, 1188, 
       1328, 1694, 1526, 1187, 1525, 1693, 1409, 1327, 1186, 1524, 1692, 1408,
        1326, 1185, 1523, 1691, 1325, 1184, 1690, 1689, 1506, 1183, 1688, 
       1505, 1182, 1687, 1504, 1181, 1686, 1503, 1180, 1685, 1502, 1179, 1522,
        1684, 1324, 1178, 1521, 1683, 1407, 1323, 1410}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{432, 632, 1542, 433, 641, 455, 868, 977, 1709, 651, 470, 802,
        1700, 664, 484, 809, 1702, 678, 499, 816, 692, 514, 1642, 705, 1582, 
       529, 719, 1596, 543, 1655, 729, 554, 1659, 739, 564, 1664, 748, 575, 
       947, 1741, 994, 758, 589, 1674, 830, 771, 603, 1684, 837, 785, 618}], 
      Line3DBox[{434, 844, 968, 633, 1736, 435, 845, 864, 642, 1552, 456, 869,
        652, 471, 1628, 665, 485, 1630, 679, 500, 1635, 693, 515, 1643, 706, 
       1583, 530, 720, 1597, 544, 730, 1606, 555, 925, 926, 1723, 740, 565, 
       927, 1732, 940, 749, 576, 1669, 948, 759, 590, 1675, 772, 604, 1685, 
       786, 619}], 
      Line3DBox[{272, 270, 1415, 387, 274, 1553, 457, 653, 1561, 472, 666, 
       486, 1631, 680, 501, 1636, 694, 516, 1644, 707, 1584, 531, 721, 1598, 
       545, 331, 1433, 405, 333, 1440, 411, 1441, 345, 577, 1670, 760, 591, 
       1676, 773, 605, 1686, 787, 620}], 
      Line3DBox[{436, 846, 969, 847, 1543, 971, 850, 865, 851, 1554, 458, 654,
        1562, 473, 667, 1568, 487, 681, 502, 1637, 695, 517, 1645, 708, 1585, 
       532, 897, 898, 1599, 981, 901, 914, 902, 1607, 986, 916, 928, 1724, 
       917, 990, 930, 1726, 941, 931, 578, 1671, 761, 592, 1677, 774, 606, 
       1687, 788, 621}], 
      Line3DBox[{437, 848, 970, 849, 1544, 438, 643, 1555, 459, 655, 1563, 
       474, 668, 1569, 488, 682, 1574, 503, 696, 518, 1646, 709, 1586, 533, 
       899, 980, 900, 1600, 982, 904, 915, 1721, 905, 987, 918, 929, 1725, 
       919, 566, 750, 1614, 579, 762, 1617, 593, 1678, 775, 607, 1688, 789, 
       622}], Line3DBox[{439, 634, 1545, 441, 644, 1556, 460, 656, 1564, 475, 
       669, 1570, 489, 683, 1575, 504, 884, 1714, 886, 519, 891, 893, 1587, 
       979, 894, 903, 1719, 896, 546, 731, 1608, 556, 741, 1612, 567, 751, 
       1615, 580, 763, 1618, 594, 776, 1621, 608, 1689, 790, 623}], 
      Line3DBox[{443, 636, 1546, 444, 1626, 646, 462, 798, 1698, 658, 477, 
       803, 1701, 671, 491, 810, 1712, 880, 685, 506, 817, 1716, 888, 698, 
       521, 1647, 889, 711, 1588, 535, 723, 548, 1657, 733, 558, 1661, 743, 
       569, 1666, 753, 582, 826, 1705, 765, 596, 831, 1735, 955, 778, 610, 
       1691, 838, 960, 792, 625}], 
      Line3DBox[{445, 637, 1547, 446, 647, 1557, 463, 799, 1699, 659, 478, 
       804, 876, 672, 492, 811, 1713, 881, 686, 507, 1638, 818, 890, 699, 522,
        1648, 823, 712, 1589, 536, 724, 1601, 549, 734, 559, 1662, 744, 570, 
       1667, 754, 583, 827, 1706, 766, 597, 1680, 832, 956, 779, 611, 1692, 
       839, 961, 793, 626}], 
      Line3DBox[{447, 638, 1548, 448, 648, 1558, 464, 800, 660, 1710, 479, 
       805, 877, 673, 493, 1633, 812, 882, 687, 508, 1639, 819, 700, 523, 
       1649, 824, 713, 1590, 537, 725, 1602, 550, 735, 1609, 560, 745, 571, 
       1668, 755, 584, 1673, 828, 949, 767, 598, 1681, 833, 957, 780, 612, 
       1693, 840, 962, 794, 627}], 
      Line3DBox[{449, 639, 1549, 450, 649, 1559, 465, 870, 871, 1565, 874, 
       806, 878, 807, 494, 1634, 813, 883, 814, 509, 1640, 820, 821, 524, 
       1650, 714, 1591, 538, 726, 1603, 551, 736, 1610, 561, 746, 1613, 572, 
       942, 943, 993, 1740, 944, 950, 945, 953, 1733, 834, 958, 835, 613, 
       1694, 841, 963, 842, 628}], 
      Line3DBox[{451, 852, 853, 1550, 973, 856, 857, 1560, 466, 872, 978, 
       1738, 873, 480, 674, 1571, 495, 688, 1576, 510, 1641, 701, 525, 1651, 
       715, 1592, 539, 727, 1604, 552, 737, 1611, 562, 932, 1727, 933, 991, 
       935, 1729, 936, 585, 951, 995, 952, 599, 1682, 781, 614, 1695, 795, 
       629}], Line3DBox[{452, 854, 972, 855, 1551, 975, 860, 866, 1707, 861, 
       467, 661, 1566, 481, 675, 1572, 496, 689, 1577, 511, 702, 1579, 526, 
       1652, 716, 1593, 540, 906, 907, 1605, 984, 910, 1720, 911, 988, 921, 
       934, 1728, 922, 992, 938, 1731, 946, 939, 586, 768, 1619, 600, 782, 
       615, 1696, 796, 630}], 
      Line3DBox[{453, 858, 974, 1737, 859, 976, 862, 867, 1708, 863, 468, 662,
        1567, 482, 676, 1573, 497, 690, 1578, 512, 703, 1580, 527, 717, 1594, 
       1595, 541, 908, 983, 1739, 909, 985, 912, 920, 1722, 913, 989, 923, 
       937, 1730, 924, 573, 756, 1616, 587, 769, 1620, 601, 783, 1622, 616, 
       964, 965, 966}], 
      Line3DBox[{617, 784, 959, 836, 1683, 602, 770, 954, 1734, 829, 588, 757,
        1704, 825, 574, 747, 1663, 563, 738, 1658, 553, 728, 1654, 542, 718, 
       1653, 528, 1581, 704, 822, 513, 691, 1703, 815, 498, 677, 879, 1711, 
       808, 483, 663, 875, 801, 469, 650, 1697, 797, 454, 640, 1624, 431, 631,
        843, 967}], 
      Line3DBox[{624, 791, 1690, 609, 777, 1679, 595, 764, 1672, 581, 752, 
       1665, 568, 742, 1660, 557, 732, 1656, 547, 722, 1718, 895, 534, 710, 
       1717, 892, 520, 697, 887, 1715, 885, 505, 684, 1632, 490, 670, 1629, 
       476, 657, 1627, 461, 645, 1625, 442, 635, 1623, 440}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
MDUDTuqlmSLkdpRkXuOQemcSJOQ+NgglkkCI4R+78h//mNaBlT3HjUbQufAN
kgJLrSD6MWH54lcKfX87u2KvjaH6Mm6T1ysvIfzB1CctOSp8O7RMXXcdQcb2
74u6aprQqtSbsivjFLhS6/qEPbYffXvrfmDu7CA6W3Yscz+FDKH7X3reQB3I
glTE9ml5AlVnd/16TtfXDQrmutV1lejDmHWl1iscij/t2MIzPwMcZ2c0mrX9
kNNHXwk272lE8bud2B0yA66OZSwdwjgYye5Zv+RTBZcCLyZb0vHU//yJnsiw
CbAKNL+wg57nub6/TH4NkyB89/vBwLoBuPX6jtvx64NwypXiuZxCBs1o641l
a00gGzx27UHAGIh1xJ7cfJYCYoU3Tl378wBMSlR2amtNwDciD6UjhALuhQcD
nfMa0UJqoo9+zxgUDyxKrOtTgMLw3e1l+O7+MXx31X8Wu51YcUi4g9975k41
RB+XDzmsQwLp58wDU8M4pCdbMTO75AX5ksWl5wVIsG6yaDIrgENn64965jyt
RHYjqaNjZ0lAq6sS7c2bQD79Z7xfPOpEI4abBCxHSBCFYz353WQQdVrw+pcz
DaJN/6Z1I6LJsN/YW4Hg04KObU6R0bYdQ8Z31JfqjlFgt9tV3iqeMLTJ/IRv
w6UJ5OX8MzDCmwJDuo2f1dzwIPjwk2/82RwIOMX+N+MjEXhWOYN2nqXHmbz1
5E7PCtC0edF55SAJTuTnT+TeHIP01RfhvzIa4EpT3WT6Iwrs+WbGfOpGJ+zJ
Jnsl6bcD+75jUlcaZ4GqrrtLX24MTdcEVtSLNIJCSg3nog8FeBk+uimGj+4l
w0cX9wRtM7bEI/ct10IUD+bCdi3KgnQREfq9mP3cNxJQ3GLcEseaA3RcFQ2P
VyMCqwWTx6o9HnltEiKb/vyMZr/EnNXOJ4LiSEWP9g0c+mMTFOm1rQJpCfYT
YiRJECux1nX/5xiKIKmZMas1oND1gMtXLlPgTUHmfMIPPMg9tlVnTgxB6ufU
5X7qEeGxk/pLDzIOlJa5pXn+0HGm9mmr0SYS3Bjj+XC6eRzSmzYQfjZlIFt2
B9/3xRRIWM9iPxs/jrZHkYrjtDNRz2iQkhm9D/xg+Nl0GH42cYaf7d/iwZSY
UTx623oojBQYijhnNlQnm9PvdybpwTUPAvK10faQzTVAxQ9XJF81E2D+K/sO
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
OBzPhuO7kiNU23l7PNAxs66YFbQOSIzvP7s1mInlsXHeB87XwPG3OI9DAMOr
/+HqW9i4etyeDXXFOc6HVwSj7ReTrmvObkc/GDca1iWxsPsVb0b2Hl5wNB29
s+mYFMhqgw2ynM5PIlnYPTNbcl/POkuPg3ubj1j6Er9/fVu0T3wcC8vD4Hh1
HIeM46JxfN0fzqqY5KzkSc4Kx4/h+Bwc34jj9HA8D457wXGSON5PM/Skh59W
HuKSmbzM6KcD99XqE/uOM2Dxvfn6WqxClD+f65wppR38ryexsp//PX8rNM6z
0ONNG/ou8eCwjeB78F0TUtz9noXle9eRvG4pG1eM23d3guRgjdl8GVfSs9hC
8quPSX5VkeRU1yv82we5qqpox3MlCJ4cNuRM3uaPVpht6739ewjrN+H2RuK8
J9z+wyXz/uFUr7D5RxrqFGPVXVXIw776Tp4YFZncnkgeOjeA3cNjsOjdgxdr
qYhW9c13/AQVyhzWlrc2D8DMZqEWb3Ma0efUBQO5/dCyXnmJwOJBCC/yC1VP
ewtGcFyR/w0NeI/45k4Q7xvOF8PtF/2/eP57bDw/bq/m33phuL2RNTH/5uRN
/w9vi8XmH/0kOVXcnigtkp+UZvteAxzPiduPtIj0jF79//SM4la+HYmWooKW
pdYmTz8qUB0uGa8j+hSOO8VxszjeD+e5TD2MkN2d0ggt9D1y8hx1yO2oyCKH
ZLyXgfNHfGJ/t575WIVe7GtVPCqcho6Ybmg21RzE8sA47hTHx+K4RBy/jeOH
cXubcTwnbs+wJ3fP0Ie57Uj7YllXaUoRrLik5HtmmIndo4vzU3D7YHG+CW6f
27LBo5JvElpg1vmFaccTS9Abl8fvv9xmYfeV4TheHGe7eWl2VvWNOpQqX0QZ
I+aqQ8ILv8geY0LBl+JCRlENeB8/P8WX34JGKssdDKSYWN/hIfn9AnJs3y+A
2yuL82tw3grfPL8gv4G3aElXQ/bWS1VI+VqoYYzNIJZPxvHDOG8I5/XgvBgc
/4zjk4uPquy7KtYODypLxINNP6NHsg7H9Yicv4Wstx5kvdUk6+3fekx/6x/9
LWf+t1y3duSI9ZF9jWjeL4sp85X14L77KLdnABOsH0UMs+7QYda5N56SdyiQ
EDPb1P01A5wviyjd29iJ/MuiE/Mzc+GVZ7Ju/RYGPBy8YyIV3gr9afVHTI9W
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
wZS90A==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 281.1900469498285},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 5}, {0, 5}, {-0.9975836142805364, 0.9993395329453193}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.785315478268672, 2.4565687453661718`, 2.190559197757896},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.643035698691922*^9}]
}, Open  ]],

Cell["\<\
We put the link here
https://www.youtube.com/watch?v=Zqkn8CoJp9k\
\>", "Text",
 CellChangeTimes->{{3.6430361149631033`*^9, 3.643036119155398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}], ",", "t"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643036556533073*^9, 3.643036577732828*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
    Line3DBox[CompressedData["
1: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
NUKS8P8/97Qj9/Z/zzuVnTj3U2tbRBL+H/2aPv8=
     "]]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{127., 413.},
  Method->{},
  PlotRange->{{-0.999999512844876, 0.9999999999999671}, {-0.9999996658276197, 
   0.9999993650500513}, {0., 12.56637035790263}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.5862787421567983`, 1.727229562695972, 1.3333567810668425`},
  ViewVertical->{4.490198000307742, 
   3.018271688126387, -0.5084643751531143}]], "Output",
 CellChangeTimes->{3.643036579817811*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.643036625635083*^9, 3.6430366304586687`*^9}}],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.643036632096347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.643036634927664*^9, 3.6430366395665483`*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.6430366398986397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.643036647171933*^9, 3.643036653117084*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Cos", "[", "x", "]"}], "2"], "-", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.643036653723151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.643036665537156*^9, 3.6430366795074987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox[
   RowBox[{"Cos", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.643036681438313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"3", 
      RowBox[{"y", "[", "x", "]"}]}], "+", 
     RowBox[{"Cos", "[", "x", "]"}]}], "\[Equal]", "x"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.643036701110034*^9, 3.643036726916264*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "117"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "26"}], "+", 
        RowBox[{"39", " ", "x"}], "-", 
        RowBox[{"27", " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], "-", 
        RowBox[{"18", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.643036727884501*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y1", "'"}], "[", "x", "]"}], "\[Equal]", 
      RowBox[{"y2", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y2", "'"}], "[", "x", "]"}], "+", "3"}], "==", 
      RowBox[{"y1", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y1", "[", "x", "]"}], ",", 
     RowBox[{"y2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6430368108810043`*^9, 3.6430368486281977`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"y1", "[", "x", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "4"]}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "x"}]]}], "+", 
         SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["3", "4"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "x"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "x"}]]}], ")"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"C", "[", "1", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"C", "[", "2", "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"y2", "[", "x", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "4"]}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "x"}]]}], "+", 
         SuperscriptBox["\[ExponentialE]", "x"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["3", "4"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"C", "[", "1", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"C", "[", "2", "]"}]}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.643036833561636*^9, 3.643036849647934*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   SuperscriptBox["i", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643036946362709*^9, 3.64303701109818*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "n"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.643036956707838*^9, 3.643037011661834*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "0"}], ",", "1", ",", "0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"d", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6430370663464603`*^9, 3.643037095898699*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxN1H0w0wEYB/CllMzLmWWbxFDp5S5uRV3JSxKVJmIOWRTbFWdtui4dRelV
J1Kct255yTq9iJi6zksLM1bXy9BxwiI5SUjZWapL31/P3fee+/zz/eP547E+
KPCP0iGRSNzf+bMTP+4Zn521rSfNzbFC+reuGcIxYerv0mnC+9+c0AomCDvX
Fen1DhLWZE1b1isJn9hRsjsp77/+kpli0kbCAjfeekaYDfxw0dHYwgxrOD5V
GbVawYQvd7YK09VWcPm4s/CBryXc02S76meOBcygVgR5j5jD/Y+TeuNCGXAl
o5H5UkKDKa93PiGbmsGJ84+3eZyjwmOjtKwyFQX+ytLUTG4zgb9FFK/ssjCG
mXuL2mQyMsz/YrNCUKwH1+qkjcS768Ks5nieF10Hjp69dXOIo63758KAUX+H
gimYYuAco+WMwR5BDU0UUzXsf6HQz6O3Hw6Xnu2Ou0c4gbZj/K0X4aoOxbLs
hD6YXS755NT2HjareOHpLXoHsygZoXcMCPuK9gn1Szvhi6zO/LauDlhT0Tex
17Md7qmcvBVMfwP7RDvOqBJaYPKQ4YcbVXJYETnYGjjaDHtzs/NUB5rg7X7T
m1XbZPDJ2JMTEpMn8A/+WtmqszXw8Yjua5LJalgU4MKSdFTCqmML+tlbyuBX
fF4y21ICK0PkTPa8Ejg1mV6Xm1YAp/C7tTkB2cS994idc8wz4CGefMqh4Rxc
HiUe4uaK4KeL3YTpTsGufzXmmnbEzbrU8TTMOUw3VRldgSvZ8l3R7tfhCHcx
rzpEDB8O7baTXr8NP/VaE7g/5SH8PIJnFlYrhYd3CXzsGc/gr5Flhg775LC3
mVi59O472GCro8I3Ww07xp46FMkYI/oDyQsOjk7BtsGaBmGRFl6hjTM8NT7P
7Z8lwbMKNUcXNtbVbz+frAdzaxu/sPLJcMH8rNzTGiO4t1XUkmJsAg93LTfK
lVFgXmbWtDKECre/Co9ZOLwEduFU2Rnn0WDamZZLTvYM+NMEf8O6AXP4/giX
tybTAh64ssTVc7klTI3jhDt0WMGhSWupBdVM+LZ+55biRGv4s7TlQmagDTyy
aakdxcoW3pD+yODSVcJz/xz+BRzypgY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.643037091204871*^9, 3.6430370966684217`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "10"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"a", "+", 
      SuperscriptBox["i", "2"]}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "a"}], "Input",
 CellChangeTimes->{{3.643037113720546*^9, 3.6430371341074247`*^9}}],

Cell[BoxData["385"], "Output",
 CellChangeTimes->{3.64303713528906*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"total", "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"a", "<", "10"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"a", "+", "1"}]}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"total", "=", 
     RowBox[{"total", "+", "a"}]}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"Print", "[", "total", "]"}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.643037147207529*^9, 3.64303717263375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.643037173855019*^9}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.643037173861628*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.643037173862857*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.64303717386406*^9}],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.643037173864629*^9}],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.6430371738651123`*^9}],

Cell[BoxData["21"], "Print",
 CellChangeTimes->{3.643037173865595*^9}],

Cell[BoxData["28"], "Print",
 CellChangeTimes->{3.643037173866078*^9}],

Cell[BoxData["36"], "Print",
 CellChangeTimes->{3.643037173866585*^9}],

Cell[BoxData["45"], "Print",
 CellChangeTimes->{3.6430371738670893`*^9}],

Cell[BoxData["55"], "Print",
 CellChangeTimes->{3.6430371738676147`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", "x"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "a", " ", "y"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643037203760704*^9, 3.643037223317852*^9}, {
  3.643037258836035*^9, 3.643037351313403*^9}, {3.643037389491873*^9, 
  3.643037412543544*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 2., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 2}}, Typeset`size$$ = {360., {138., 143.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$20005$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$20005$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot3D[Sin[$CellContext`a$$ $CellContext`x] 
        Cos[(2 $CellContext`a$$) $CellContext`y], {$CellContext`x, 0, 
         5}, {$CellContext`y, 0, 5}], 
      "Specifications" :> {{$CellContext`a$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {182., 189.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.643037224279654*^9, {3.6430372602654057`*^9, 3.643037351866868*^9}, 
   3.643037413808992*^9}]
}, Open  ]],

Cell["\<\
There\[CloseCurlyQuote]s a built-in export command (just right click on the \
image (perhaps not he manipulated one above)) and there\[CloseCurlyQuote]s a \
copy as latex which you can use to export things as latex.\
\>", "Text",
 CellChangeTimes->{{3.643037517674788*^9, 3.643037547466351*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m", "=", "1000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"finalPosition", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"iter", "=", "1"}], ",", 
     RowBox[{"iter", "\[LessEqual]", "m"}], ",", 
     RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"n", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"t", "=", "1"}], ",", 
        RowBox[{"t", "\[LessEqual]", 
         RowBox[{
          RowBox[{"n", "/", "2"}], "-", "1"}]}], ",", 
        RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", ">", 
            RowBox[{"Random", "[", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"x", "=", 
            RowBox[{"x", "+", "1"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"x", "=", 
            RowBox[{"x", "-", "1"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"finalPosition", "[", 
        RowBox[{"[", "x", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"finalPosition", "[", 
         RowBox[{"[", "x", "]"}], "]"}], "+", "1"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalPosition", "=", 
   RowBox[{"finalPosition", "/", "iter"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"finalPosition", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.643037730125682*^9, 3.643037794002787*^9}, {
  3.643037830685019*^9, 3.643037888673032*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd0E9Ik3Ecx/FhFnSwQ8M6SDWpGGHD/j392ap9p9t0pnNTazvUjChaf6CC
xFulCUXYqQ55EEaNigXZsKcOhTt1C9pFwtuOOvpj4I9AmOUzfz7R+4GHhxdv
Pvz4PY3nrvVcqHE4HOeXX+t7J9+ceV3zqeCoPm8/ZpwLib5C2b/q4vrFplx/
xfZsbaV+emKd/O8Ntm8OLz0oJ5zwZrgB3mbbG7gdUq8a4e3wTtgN74KbYA/c
bHs8U3i6OL0H3gvvg/fDB2ADPggfgg/DR2Av7IOPwsfk9Pdn7i2p6/4VH0f3
2z1a7I9XLovdqy6LFK88+Vy6NKx7AD0gIzvmH9Y9GtO9Bb1Fdrtmvj7Ojeve
it4q939Y57/RPYgeRA+hh2RNemhTeuid7mH0sAzem/qTrH2vext6m2y9+yJS
avigezt6uyx4rv4q/i7oHkGPyMzG8FTyzOq+A71DUmPpL3VeU/cT6Mv25Z2+
/KTuneid4gp6Bpfqc7p3oXfJz4vW/Z/rHkWPynwptXYyO6p7N3q3ZOdGb2QH
Rvzu2YmXt4yY3aseiInrm/X/z650E13FJDNn9Zjex7GPY4+u4tj3YA+bsIKN
XuxhE1aw0Yc9bMIKNk5iD5uwgo1T2MMmrGAjgT1swgo2ktjD5j//BfyJXEQ=

      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{17.052083, 0.552083}, {8.469883, 0.5}},
  ImageSize->{465., Automatic},
  Method->{},
  PlotRange->{{-2.0833333333333335`, 
   102.08333333333333`}, {-0.0026854865564542984`, 0.13158884126626064`}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic,
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.643037907606488*^9, 3.64303795067085*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fib", "[", "n_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "\[LessEqual]", "2"}], ",", "1", ",", 
    RowBox[{
     RowBox[{"fib", "[", 
      RowBox[{"n", "-", "1"}], "]"}], "+", 
     RowBox[{"fib", "[", 
      RowBox[{"n", "-", "2"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"fib", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6430379928959513`*^9, 3.643038017683968*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6430380275907183`*^9}]
}, Open  ]],

Cell["\<\
Now this is some quantum optics stuff :D
I\[CloseCurlyQuote]m so excited, no more algebraic mistakes!! :)\
\>", "Text",
 CellChangeTimes->{{3.64303860073981*^9, 3.643038636195692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputState", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["a", "2"], 
     SqrtBox[
      RowBox[{"2", "!"}]]], 
    FractionBox[
     SuperscriptBox["b", "2"], 
     SqrtBox[
      RowBox[{"2", "!"}]]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BSrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", 
      FractionBox[
       RowBox[{"a", "+", "b"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{"b", "\[Rule]", 
      FractionBox[
       RowBox[{"a", "-", "b"}], 
       SqrtBox["2"]]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toFockRule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["a", "n_"], "\[Rule]", " ", 
      RowBox[{
       SqrtBox[
        RowBox[{"n", "!"}]], 
       RowBox[{"Ket", "[", 
        RowBox[{"a", ",", "n"}], "]"}]}]}], ",", 
     RowBox[{
      SuperscriptBox["b", "n_"], "\[Rule]", " ", 
      RowBox[{
       SqrtBox[
        RowBox[{"n", "!"}]], 
       RowBox[{"Ket", "[", 
        RowBox[{"b", ",", "n"}], "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"inputState", " ", "/.", " ", 
  "toFockRule"}], "\[IndentingNewLine]", 
 RowBox[{"inputState", " ", "/.", " ", "BSrule"}], "\[IndentingNewLine]", 
 RowBox[{"output", "=", 
  RowBox[{
   RowBox[{"Expand", "[", "%", "]"}], " ", "/.", " ", 
   "toFockRule"}]}], "\[IndentingNewLine]", 
 RowBox[{"P04", "=", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"output", ",", 
      RowBox[{"Ket", "[", 
       RowBox[{"a", ",", "4"}], "]"}]}], "]"}], "]"}], 
   "2"]}], "\[IndentingNewLine]", 
 RowBox[{"P22", "=", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"output", ",", 
      RowBox[{
       RowBox[{"Ket", "[", 
        RowBox[{"a", ",", "2"}], "]"}], 
       RowBox[{"Ket", "[", 
        RowBox[{"b", ",", "2"}], "]"}]}]}], "]"}], "]"}], 
   "2"]}], "\[IndentingNewLine]", 
 RowBox[{"P40", "=", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{"Coefficient", "[", 
     RowBox[{"output", ",", 
      RowBox[{"Ket", "[", 
       RowBox[{"b", ","}], "]"}]}], "]"}], "]"}], 
   "2"]}], "\[IndentingNewLine]", 
 RowBox[{"P04", "+", "P22", "+", "P40"}]}], "Input",
 CellChangeTimes->{{3.643038638263072*^9, 3.643038854167615*^9}, {
   3.64303889243011*^9, 3.643038956621406*^9}, 3.643039023496423*^9, 
   3.643040375753992*^9}],

Cell[BoxData[
 RowBox[{
  TemplateBox[{RowBox[{"a", ",", "2"}]},
   "Ket"], " ", 
  TemplateBox[{RowBox[{"b", ",", "2"}]},
   "Ket"]}]], "Output",
 CellChangeTimes->{{3.643039003772213*^9, 3.64303902863594*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"a", "-", "b"}], ")"}], "2"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"a", "+", "b"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.643039003772213*^9, 3.643039028643862*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   SqrtBox[
    FractionBox["3", "2"]], " ", 
   TemplateBox[{RowBox[{"a", ",", "4"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   TemplateBox[{RowBox[{"a", ",", "2"}]},
    "Ket"], " ", 
   TemplateBox[{RowBox[{"b", ",", "2"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SqrtBox[
    FractionBox["3", "2"]], " ", 
   TemplateBox[{RowBox[{"b", ",", "4"}]},
    "Ket"]}]}]], "Output",
 CellChangeTimes->{{3.643039003772213*^9, 3.64303902865082*^9}}],

Cell[BoxData[
 FractionBox["3", "8"]], "Output",
 CellChangeTimes->{{3.643039003772213*^9, 3.643039028655054*^9}}],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{{3.643039003772213*^9, 3.643039028657975*^9}}],

Cell[BoxData[
 FractionBox["3", "8"]], "Output",
 CellChangeTimes->{{3.643039003772213*^9, 3.643039028661591*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.643039003772213*^9, 3.6430390286651573`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{927, 1148},
WindowMargins->{{Automatic, -10}, {Automatic, -10}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 158, 3, 32, "Input"],
Cell[583, 20, 125, 3, 32, "Output"]
}, Open  ]],
Cell[723, 26, 160, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[908, 33, 179, 4, 32, "Input"],
Cell[1090, 39, 127, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1254, 47, 120, 2, 32, "Input"],
Cell[1377, 51, 175, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1589, 61, 149, 3, 32, "Input"],
Cell[1741, 66, 186, 4, 32, "Output"]
}, Open  ]],
Cell[1942, 73, 150, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[2117, 80, 119, 2, 32, "Input"],
Cell[2239, 84, 96, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2372, 91, 320, 7, 32, "Input"],
Cell[2695, 100, 810, 13, 55, "Output"]
}, Open  ]],
Cell[3520, 116, 320, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[3865, 129, 211, 4, 32, "Input"],
Cell[4079, 135, 107, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4223, 141, 265, 7, 32, "Input"],
Cell[4491, 150, 187, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4715, 160, 153, 3, 32, "Input"],
Cell[4871, 165, 181, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5089, 175, 204, 5, 32, "Input"],
Cell[5296, 182, 212, 6, 32, "Output"]
}, Open  ]],
Cell[5523, 191, 204, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[5752, 201, 329, 9, 32, "Input"],
Cell[6084, 212, 180, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6301, 222, 135, 2, 32, "Input"],
Cell[6439, 226, 930, 26, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7406, 257, 264, 6, 32, "Input"],
Cell[7673, 265, 1170, 30, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8880, 300, 131, 2, 32, "Input"],
Cell[9014, 304, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9121, 310, 162, 3, 32, "Input"],
Cell[9286, 315, 613, 19, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9936, 339, 212, 6, 32, "Input"],
Cell[10151, 347, 162, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10350, 356, 276, 7, 32, "Input"],
Cell[10629, 365, 213, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10879, 375, 231, 6, 32, "Input"],
Cell[11113, 383, 197, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11347, 394, 257, 7, 32, "Input"],
Cell[11607, 403, 135, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11779, 411, 264, 7, 32, "Input"],
Cell[12046, 420, 94, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12177, 427, 182, 4, 32, "Input"],
Cell[12362, 433, 472, 15, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12871, 453, 244, 7, 32, "Input"],
Cell[13118, 462, 135, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13290, 470, 248, 7, 32, "Input"],
Cell[13541, 479, 135, 3, 32, "Output"]
}, Open  ]],
Cell[13691, 485, 127, 2, 32, "Input"],
Cell[13821, 489, 287, 7, 32, "Input"],
Cell[14111, 498, 127, 3, 32, "Output"],
Cell[CellGroupData[{
Cell[14263, 505, 286, 7, 32, "Input"],
Cell[14552, 514, 169, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14758, 523, 551, 15, 55, "Input"],
Cell[15312, 540, 3958, 70, 381, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19307, 615, 278, 8, 32, "Input"],
Cell[19588, 625, 651, 18, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20276, 648, 279, 8, 32, "Input"],
Cell[20558, 658, 473, 11, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21068, 674, 159, 3, 55, "Input"],
Cell[21230, 679, 70, 1, 32, "Output"]
}, Open  ]],
Cell[21315, 683, 212, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[21552, 692, 133, 2, 32, "Input"],
Cell[21688, 696, 71, 1, 32, "Output"]
}, Open  ]],
Cell[21774, 700, 211, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[22010, 709, 122, 2, 32, "Input"],
Cell[22135, 713, 71, 1, 32, "Output"]
}, Open  ]],
Cell[22221, 717, 258, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[22504, 728, 140, 2, 32, "Input"],
Cell[22647, 732, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22754, 738, 135, 2, 32, "Input"],
Cell[22892, 742, 69, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22998, 748, 133, 2, 32, "Input"],
Cell[23134, 752, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23241, 758, 194, 4, 32, "Input"],
Cell[23438, 764, 204, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23679, 774, 180, 4, 32, "Input"],
Cell[23862, 780, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23971, 786, 261, 7, 32, "Input"],
Cell[24235, 795, 439, 8, 55, "Output"]
}, Open  ]],
Cell[24689, 806, 644, 19, 32, "Input"],
Cell[CellGroupData[{
Cell[25358, 829, 174, 4, 32, "Input"],
Cell[25535, 835, 205, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25777, 845, 222, 6, 32, "Input"],
Cell[26002, 853, 411, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26450, 869, 263, 8, 32, "Input"],
Cell[26716, 879, 415, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27168, 895, 568, 13, 32, "Input"],
Cell[27739, 910, 25569, 764, 445, "Output"]
}, Open  ]],
Cell[53323, 1677, 90381, 1736, 500, 64143, 1305, "CachedBoxData", "BoxData", \
InheritFromParent],
Cell[143707, 3415, 492, 10, 23, "Message"],
Cell[144202, 3427, 92, 1, 32, "Input"],
Cell[144297, 3430, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[144414, 3435, 533, 16, 32, "Input"],
Cell[144950, 3453, 309, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145296, 3465, 277, 8, 32, "Input"],
Cell[145576, 3475, 137, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145750, 3483, 386, 12, 32, "Input"],
Cell[146139, 3497, 125, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146301, 3505, 329, 9, 32, "Input"],
Cell[146633, 3516, 333, 7, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147003, 3528, 108, 1, 32, "Input"],
Cell[147114, 3531, 85, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147236, 3537, 176, 3, 32, "Input"],
Cell[147415, 3542, 87, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147539, 3548, 196, 4, 32, "Input"],
Cell[147738, 3554, 106, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147881, 3560, 276, 8, 32, "Input"],
Cell[148160, 3570, 93, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148290, 3576, 154, 2, 32, "Input"],
Cell[148447, 3580, 213, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148697, 3592, 187, 3, 32, "Input"],
Cell[148887, 3597, 164, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149088, 3606, 239, 4, 55, "Input"],
Cell[149330, 3612, 114, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149481, 3618, 142, 2, 32, "Input"],
Cell[149626, 3622, 225, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149888, 3631, 334, 8, 32, "Input"],
Cell[150225, 3641, 1450, 24, 363, "Output"]
}, Open  ]],
Cell[151690, 3668, 374, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[152089, 3683, 138, 2, 32, "Input"],
Cell[152230, 3687, 216, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152483, 3697, 827, 23, 77, "Input"],
Cell[153313, 3722, 1339, 26, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154689, 3753, 117, 2, 32, "Input"],
Cell[154809, 3757, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154916, 3763, 97, 1, 32, "Input"],
Cell[155016, 3766, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155123, 3772, 550, 14, 163, "Input"],
Cell[155676, 3788, 127, 3, 32, "Output"],
Cell[155806, 3793, 81, 2, 36, "Output"],
Cell[155890, 3797, 88, 1, 32, "Output"],
Cell[155981, 3800, 174, 6, 49, "Output"],
Cell[156158, 3808, 166, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156361, 3816, 115, 2, 32, "Input"],
Cell[156479, 3820, 167, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156683, 3828, 139, 3, 34, "Input"],
Cell[156825, 3833, 93, 2, 34, "Output"]
}, Open  ]],
Cell[156933, 3838, 26, 0, 32, "Input"],
Cell[CellGroupData[{
Cell[156984, 3842, 294, 9, 34, "Input"],
Cell[157281, 3853, 272, 9, 37, "Output"]
}, Open  ]],
Cell[157568, 3865, 133, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[157726, 3871, 163, 5, 93, "Title"],
Cell[CellGroupData[{
Cell[157914, 3880, 158, 3, 32, "Input"],
Cell[158075, 3885, 399, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158511, 3901, 158, 3, 32, "Input"],
Cell[158672, 3906, 156, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158865, 3915, 241, 7, 32, "Input"],
Cell[159109, 3924, 134, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159280, 3933, 306, 9, 37, "Input"],
Cell[159589, 3944, 194, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159820, 3954, 173, 4, 37, "Input"],
Cell[159996, 3960, 206, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160239, 3972, 200, 4, 32, "Input"],
Cell[160442, 3978, 217, 3, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160696, 3986, 301, 9, 34, "Input"],
Cell[161000, 3997, 262, 8, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161299, 4010, 181, 4, 37, "Input"],
Cell[161483, 4016, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161590, 4022, 232, 6, 37, "Input"],
Cell[161825, 4030, 379, 14, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162241, 4049, 413, 15, 45, "Input"],
Cell[162657, 4066, 255, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162949, 4081, 369, 10, 32, "Input"],
Cell[163321, 4093, 442, 9, 23, "Message"],
Cell[163766, 4104, 349, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164152, 4120, 169, 4, 32, "Input"],
Cell[164324, 4126, 148, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164509, 4134, 120, 2, 34, "Input"],
Cell[164632, 4138, 128, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164797, 4146, 123, 2, 32, "Input"],
Cell[164923, 4150, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165030, 4156, 122, 2, 32, "Input"],
Cell[165155, 4160, 147, 3, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165339, 4168, 266, 8, 32, "Input"],
Cell[165608, 4178, 213, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165858, 4190, 166, 4, 32, "Input"],
Cell[166027, 4196, 117, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166181, 4204, 127, 2, 32, "Input"],
Cell[166311, 4208, 627, 18, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166975, 4231, 182, 3, 55, "Input"],
Cell[167160, 4236, 268, 8, 32, "Output"],
Cell[167431, 4246, 840, 25, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168308, 4276, 1017, 29, 210, "Input"],
Cell[169328, 4307, 87, 2, 32, "Output"],
Cell[169418, 4311, 722, 22, 72, "Output"],
Cell[170143, 4335, 632, 18, 60, "Output"],
Cell[170778, 4355, 628, 18, 60, "Output"],
Cell[171409, 4375, 629, 18, 60, "Output"],
Cell[172041, 4395, 941, 30, 86, "Output"],
Cell[172985, 4427, 704, 20, 94, "Output"],
Cell[173692, 4449, 669, 20, 60, "Output"],
Cell[174364, 4471, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174473, 4477, 586, 16, 55, "Input"],
Cell[175062, 4495, 7505, 226, 206, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182604, 4726, 122, 2, 32, "Input"],
Cell[182729, 4730, 3545, 74, 451, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186311, 4809, 528, 14, 99, "Input"],
Cell[186842, 4825, 152, 4, 32, "Output"],
Cell[186997, 4831, 111, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187145, 4837, 415, 11, 55, "Input"],
Cell[187563, 4850, 114, 1, 32, "Output"]
}, Open  ]],
Cell[187692, 4854, 202, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[187919, 4862, 1061, 30, 183, "Input"],
Cell[188983, 4894, 97, 1, 32, "Output"],
Cell[189083, 4897, 99, 1, 32, "Output"]
}, Open  ]],
Cell[189197, 4901, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[189314, 4906, 119, 1, 65, "Section"],
Cell[189436, 4909, 26, 0, 32, "Input"],
Cell[CellGroupData[{
Cell[189487, 4913, 237, 6, 32, "Input"],
Cell[189727, 4921, 12623, 217, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202387, 5143, 322, 9, 32, "Input"],
Cell[202712, 5154, 25512, 430, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228261, 5589, 363, 10, 32, "Input"],
Cell[228627, 5601, 96380, 1572, 296, "Output"]
}, Open  ]],
Cell[325022, 7176, 156, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[325203, 7184, 367, 10, 32, "Input"],
Cell[325573, 7196, 18396, 310, 428, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344006, 7511, 176, 4, 32, "Input"],
Cell[344185, 7517, 99, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344321, 7524, 153, 3, 32, "Input"],
Cell[344477, 7529, 101, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344615, 7536, 226, 6, 32, "Input"],
Cell[344844, 7544, 202, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345083, 7555, 236, 6, 32, "Input"],
Cell[345322, 7563, 187, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345546, 7574, 415, 12, 32, "Input"],
Cell[345964, 7588, 702, 23, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346703, 7616, 591, 18, 32, "Input"],
Cell[347297, 7636, 3461, 103, 160, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350795, 7744, 228, 6, 37, "Input"],
Cell[351026, 7752, 276, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351339, 7765, 447, 13, 55, "Input"],
Cell[351789, 7780, 2045, 44, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353871, 7829, 492, 13, 126, "Input"],
Cell[354366, 7844, 71, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354474, 7850, 595, 14, 165, "Input"],
Cell[355072, 7866, 70, 1, 32, "Output"],
Cell[CellGroupData[{
Cell[355167, 7871, 69, 1, 23, "Print"],
Cell[355239, 7874, 69, 1, 23, "Print"],
Cell[355311, 7877, 68, 1, 23, "Print"],
Cell[355382, 7880, 70, 1, 23, "Print"],
Cell[355455, 7883, 72, 1, 23, "Print"],
Cell[355530, 7886, 70, 1, 23, "Print"],
Cell[355603, 7889, 70, 1, 23, "Print"],
Cell[355676, 7892, 70, 1, 23, "Print"],
Cell[355749, 7895, 72, 1, 23, "Print"],
Cell[355824, 7898, 72, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355945, 7905, 659, 18, 32, "Input"],
Cell[356607, 7925, 1764, 37, 388, "Output"]
}, Open  ]],
Cell[358386, 7965, 305, 5, 51, "Text"],
Cell[358694, 7972, 2225, 60, 429, "Input"],
Cell[360922, 8034, 1639, 36, 300, "Input"],
Cell[CellGroupData[{
Cell[362586, 8074, 568, 16, 55, "Input"],
Cell[363157, 8092, 338, 7, 32, "Output"]
}, Open  ]],
Cell[363510, 8102, 194, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[363729, 8110, 2449, 80, 319, "Input"],
Cell[366181, 8192, 211, 6, 35, "Output"],
Cell[366395, 8200, 293, 9, 49, "Output"],
Cell[366691, 8211, 562, 20, 60, "Output"],
Cell[367256, 8233, 114, 2, 49, "Output"],
Cell[367373, 8237, 114, 2, 49, "Output"],
Cell[367490, 8241, 114, 2, 49, "Output"],
Cell[367607, 8245, 96, 1, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

